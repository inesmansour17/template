{"version":3,"sources":["img/logoTun.png","img/box-img2.jpg","img/tal3.jpg","i18n.js","Home/Faq.js","Home/Stat.js","Home/Contact.js","Home/Footer.js","Navbar/Navbar.js","Chatbot/index.js","Home/Home.js","SideBar/SideBar.js","services/centers.service.js","redux/actions/centers/index.js","redux/types/index.js","Admin/Admin.js","constants/gouvernorat.js","constants/villes.js","Admin/ManageCenter/UpdateCenter/UpdateCenter.js","Admin/ManageCenter/AddCenter/AddCenter.js","services/vaccines.service.js","redux/actions/vaccines/index.js","Admin/ManageCenter/AssignVaccine/AssignVaccine.js","Admin/ManageCenter/ManageCenter.js","services/openday.service.js","redux/actions/openDays/index.js","Admin/ManageOpenDay/AddOpenDay/AddOpenDay.js","Admin/ManageOpenDay/ManageOpenDay.js","services/pharmacies.service.js","redux/actions/pharmacies/index.js","Admin/ManagePharmacy/UpdatePharmacy/UpdatePharmacy.js","Admin/ManagePharmacy/AddPharmacy/AddPharmacy.js","Admin/ManagePharmacy/ManagePharmacy.js","inscriptionPharmacie/inscriptionPharmacie.js","updateInscri/updateInscri.js","services/RDV.service.js","redux/actions/RDV/RDV.js","reportRdv/reportRdv.js","Admin/ManageVaccine/UpdateVaccine/UpdateVaccine.js","Admin/ManageVaccine/AddVaccine/AddVaccine.js","Admin/ManageVaccine/ManageVaccine.js","services/users.service.js","redux/actions/users/index.js","Admin/ManageVolunteers/AddVolunteers/AddVolunteers.js","Admin/ManageVolunteers/UpdateVolunteers/UpdateVolunteer.js","Admin/ManageVolunteers/ManageVolunteers.js","InscriptionInCenter/InscriptionInCenter.js","services/auth.service.js","redux/actions/auth/index.js","CitoyenSpace/CitoyenSpace.js","Profile/Profile.js","Router.js","App.js","reportWebVitals.js","redux/reducers/centers.js","redux/reducers/auth.js","redux/reducers/pharmacies.js","redux/reducers/vaccines.js","redux/reducers/users.js","redux/reducers/Rdv.js","redux/reducers/errorReducer.js","redux/reducers/openDay.js","redux/reducers/index.js","index.js","redux/store.js"],"names":["module","exports","i18n","use","initReactI18next","init","resources","en","translation","translationEN","fr","translationFR","ar","translationAR","lng","fallbackLng","debug","keySeparator","interpolation","escapeValue","style","background","padding","margin","Faq","t","useTranslation","id","gutter","xs","sm","md","lg","className","span","BarChartOutlined","QuestionCircleOutlined","HighlightOutlined","DollarOutlined","EnvironmentOutlined","ExclamationCircleOutlined","Stat","CheckCircleOutlined","SmileOutlined","Contact","PhoneOutlined","IeOutlined","footerS","pading","Footer","SubMenu","Menu","centerStyle","justifyContent","position","zIndex","width","height","changeLanguage","ln","Navbar","mode","Item","key","src","logo","to","title","href","target","shape","onClick","Review","alignItems","Component","defaultProps","steps","undefined","Chatbot","state","opened","toggleFloating","setState","this","floating","component","asMessage","trigger","message","options","value","label","end","contentStyle","color","lineHeight","innerHeight","Home","autoplay","tal3","tal","Header","Layout","Sider","SideBar","useState","collapsed","SetCollapsed","collapsible","onCollapse","theme","defaultSelectedKeys","icon","PieChartOutlined","exact","DesktopOutlined","baseUrl","addCenter","center","a","Axios","post","result","data","newCenter","updateCenter","put","updatedCenter","deleteCenter","name","delete","fetchCenters","get","centers","updateCenterVaccine","centerName","vaccinId","quantity","idVacc","amount","setSelectedCenter","type","setDisplayed","setDisplayUpdate","setDisplayUpdateVac","dispatch","api","list","console","log","payload","response","addVaccineToCenter","nameCenter","idVaccin","Content","Admin","useSelector","useDispatch","useEffect","actions","e","length","minHeight","marginRight","BarChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","villes","gov","cities","UpdateCenter","isModalVisible","displayUpdate","selectedCenter","setCities","handleSubmit","values","Updatedcenter","governorate","city","center_capacity","capacity","number_vaccine","visible","footer","onCancel","labelCol","wrapperCol","layout","onFinish","initialValues","rules","required","onChange","gover","found","find","ville","Option","gouvernorat","map","min","htmlType","AddCenter","displayed","addVaccine","vaccine","newVaccine","updateVaccine","updatedVaccine","deleteVaccine","vaccine_type","fetchVaccines","vaccines","AssignVaccine","displayUpdateVac","vaccActions","type_vaccine","vacc","StyledTableCell","withStyles","head","backgroundColor","palette","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","ManageCenter","isAddVisible","isUpdateVisible","isUpdateVacVisible","error","errorReducer","err","setError","code","setCode","handleDelete","clearError","notification","description","onClose","Table","aria-label","TableHead","loading","TableBody","index","handleUpdate","handleAssign","IconButton","AddOpenDay","od","newOpenDay","fetchOpenDay","openDays","openday","openDay","setSelectedOpenDay","endAge","startAge","appointmentTime","moment","opening","format","date","_id","ManageOpenDay","OpenDays","volunteersList","users","status","addPharmacy","pharmacy","newPharmacy","updatePharmacy","updatedPharmacy","deletePharmacy","fetchPharmacies","pharmacies","UpdatePharmacy","selectedPharmacy","Updatedpharmacy","pharmacy_capacity","AddPharmacy","ManagePharmacy","inscriptionPharmacie","UpdateInscri","updateRDV","appointId","appoint","updatedRDV","ReportRdv","UpdateVaccine","selectedVaccine","Updatedvaccine","stock","AddVaccine","ManageVaccine","userUrl","registerCenter","user","localStorage","setItem","token","addUser","updateUser","updatedUser","deleteUser","getAllUsers","newUser","AddVolunteers","user_type","role","opt","concat","disabled","dataSource","placeholder","filterOption","inputValue","option","props","children","toUpperCase","indexOf","UpdateVolunteers","selectedUser","diff","Updateduser","cin","firstname","lastname","email","birthday","onSelect","ManageVolunteers","UpdateVolunteer","InscriptionInCenter","block","login","JSON","stringify","loggedUser","connect","pass","Profile","history","createBrowserHistory","basename","AppRouter","path","CitoyenSpace","reportRdv","React","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","errors","updatedCenters","newCenters","filter","updatedCenterVaccine","parse","getItem","isLoggedIn","auth","updatedPharmacies","newPharmacies","updatedVACCINES","newVaccines","updatedUsers","newList","currentRDV","setErrors","selectedOpenDay","rootReducer","combineReducers","store","middlewares","thunk","composeEnhancers","compose","createStore","applyMiddleware","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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AD,MACA,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAKJ,QAAQ,kBAAkBK,KAAK,YACpC,kBAACD,GAAA,EAAD,CAAKJ,QAAQ,iBAAiBK,KAAK,aAGrC,6BACA,kBAAC,IAAD,CAAKtJ,OAAQ,IACX,kBAAC,IAAD,CAAKM,KAAM,IACT,kBAAC,KAAD,CAAWiC,MAAM,iBAAiBuB,MAAO2C,EAAQ6B,UAEnD,kBAAC,IAAD,CAAKhI,KAAM,IACT,kBAAC,KAAD,CAAWiC,MAAM,mBAAmBuB,MAAO,WAW3C,O,mGC9EH,IACd,SACA,OACA,YACA,UACA,WACA,QACA,WACA,WACA,YACA,YACA,MACD,SACA,UACA,cACA,WACA,SACA,OACA,cACA,UACA,SACA,YACA,SACA,QACA,YCkIeyF,GA1JA,CAEX,CAAIC,IAAI,OACJC,OAAO,CAAK,SACJ,YACA,WACA,YACA,eACA,QACA,aACA,UACA,WAEZ,CACID,IAAI,SACJC,OAAQ,CAAG,SACN,SACG,SACA,wBACA,cACA,sBAEZ,CAAID,IAAI,YACJC,OAAO,CAAC,YACA,WACA,aACA,UACA,WACA,eACA,aACA,UACA,YACA,SACA,kBACA,UAEZ,CACID,IAAI,UACJC,OAAO,CAAM,eACG,cACA,UACA,eACA,UACA,UACA,SACA,mBACA,eACA,YACA,UACA,QACA,SACA,aAEpB,CAACD,IAAI,WACLC,OAAO,CAAI,kBACC,WACA,eACA,cACA,YACA,aACA,SACA,UACA,eACA,UACA,qBAEb,CAACD,IAAK,QACNC,OAAO,IACN,CAACD,IAAI,WACLC,OAAO,IACP,CAACD,IAAI,WACLC,OAAO,IACP,CAACD,IAAI,YACLC,OAAO,CACC,YACA,UACA,WACA,QACA,QACA,SACA,aACA,UACA,UAER,CAACD,IAAI,YACLC,OAAO,IACP,CAACD,IAAI,MACLC,OAAO,IACR,CAACD,IAAI,SACLC,OAAO,CACF,SACA,UACA,YACA,YACA,SACA,SACA,YACA,QACA,SACA,eACA,SACA,WACA,aACA,iBAGL,CAACD,IAAI,UACL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","file":"static/js/main.fe2b3230.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoTun.ee5546b5.png\";","module.exports = __webpack_public_path__ + \"static/media/box-img2.af43a128.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tal3.0847070a.jpg\";","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport translationEN from \"./locales/en/translationEN.json\";\r\nimport translationFR from \"./locales/fr/translationFR.json\";\r\nimport translationAR from \"./locales/ar/translationAR.json\";\r\ni18n\r\n\r\n  .use(initReactI18next)\r\n\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: translationEN,\r\n      },\r\n      fr: {\r\n        translation: translationFR,\r\n      },\r\n      ar: {\r\n        translation: translationAR,\r\n      },\r\n    },\r\n    lng: \"fr\", // if you're using a language detector, do not define the lng option\r\n    fallbackLng: [\"en\", \"ar\"],\r\n    debug: true,\r\n    keySeparator: false,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import \"./Faq.css\";\r\nimport { Row, Col } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  BarChartOutlined,\r\n  QuestionCircleOutlined,\r\n  HighlightOutlined,\r\n  DollarOutlined,\r\n  EnvironmentOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst style = {\r\n  background: \"white\",\r\n  padding: \"6px\",\r\n  margin: \"12px\",\r\n};\r\n\r\nfunction Faq() {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div id=\"Faq\">\r\n      <br />\r\n      <h1>{t(\"Questions fréquentes sur EVAX\")}</h1>\r\n      <br />\r\n\r\n      <Row gutter={{ xs: 8, sm: 8, md: 18, lg: 32 }}>\r\n        <Col className=\"gutter-row\" span={8}>\r\n          <div style={style} className=\"textStyle\">\r\n            <BarChartOutlined className=\"iconStyle\" />\r\n            <br />\r\n            <br />\r\n            <h3>\r\n              {t(\r\n                \"Quels sont les grands principes de la stratégie de vaccination contre la COVID-19 ?\"\r\n              )}\r\n            </h3>\r\n            <p>\r\n              <p>{t(\"La Tunisie s’est fixé les principes suivants :\")}</p>\r\n              {t(\r\n                \"Un accès équitable pour des vaccins gratuits, efficaces, sûrs et de qualité approuvés par les données scientifiques en temps opportun\"\r\n              )}\r\n              <br />\r\n              {t(\r\n                \"Une prise de décision personnelle basée sur des données transparentes et compréhensibles\"\r\n              )}\r\n            </p>\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row\" span={8}>\r\n          <div style={style} className=\"textStyle\">\r\n            <QuestionCircleOutlined className=\"iconStyle\" />\r\n            <br />\r\n            <br />\r\n            <h3>{t(\"Comment s’enregistrer pour la vaccination Covid-19 ?\")}</h3>\r\n            <p>{t(\"Website : www.evax.tn\")} </p>\r\n            <p>{t(\"SMS : 85355\")}</p> <p> {t(\"USSD : *2021#\")}</p>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row\" span={8}>\r\n          <div style={style} className=\"textStyle\">\r\n            <HighlightOutlined className=\"iconStyle\" />\r\n            <br />\r\n            <br />\r\n            <h3> {t(\"Quels sont les objectifs de la vaccination ?\")}</h3>\r\n            <p>\r\n              {t(\r\n                \"Le premier objectif de la vaccination, c’est de faire baisser le nombre des formes graves de COVID-19.\"\r\n              )}\r\n            </p>{\" \"}\r\n            <p>\r\n              {t(\r\n                \"Les résultats des études cliniques des candidats vaccins semblent converger pour démontrer un fait principal : la vaccination permet de réduire massivement la mortalité due au virus et à ses formes graves.\"\r\n              )}\r\n            </p>{\" \"}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row gutter={{ xs: 8, sm: 8, md: 18, lg: 32 }}>\r\n        <Col className=\"gutter-row\" span={8}>\r\n          <div style={style} className=\"textStyle\">\r\n            <DollarOutlined className=\"iconStyle\" />\r\n            <br />\r\n            <br />\r\n            <h3>\r\n              {t(\"La vaccination contre la Covid-19 sera-t-elle gratuite ?\")}\r\n            </h3>\r\n            <p>{t(\"Oui.\")} </p>\r\n            <p>\r\n              {t(\r\n                \"La vaccination sera gratuite pour tous en Tunisie, mais selon la priorité établie par les autorités.\"\r\n              )}\r\n            </p>\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row\" span={8}>\r\n          <div style={style} className=\"textStyle\">\r\n            <EnvironmentOutlined className=\"iconStyle\" />\r\n            <br />\r\n            <br />\r\n            <h3>{t(\"Où se faire vacciner ?\")}</h3>\r\n            <p>\r\n              {t(\"Il y aura environ 200 centres de vaccination à raison de :\")}\r\n            </p>\r\n            <p>\r\n              {t(\r\n                \"1 à 2 grand (s) centre(s) par gouvernorat ouvert toute la semaine Et un centre par délégation à identifier par direction régionale de la santé ouvert le weekend\"\r\n              )}\r\n            </p>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row\" span={8}>\r\n          <div style={style} className=\"textStyle\">\r\n            <ExclamationCircleOutlined className=\"iconStyle\" />\r\n            <br />\r\n            <br />\r\n            <h3> {t(\"Que faire en cas de problème lors de l'inscription?\")}</h3>\r\n            <p>\r\n              {t(\r\n                \"Un numéro vert gratuit a été mis en place pour accompagner les citoyens tout au long de la campagne de vaccination.\"\r\n              )}{\" \"}\r\n              <br />\r\n              {t(\r\n                \"Le numéro vert : 80102021, ouvert du lundi au vendredi de 09h à 17h\"\r\n              )}\r\n            </p>{\" \"}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default Faq;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  CheckCircleOutlined,\r\n  HighlightOutlined,\r\n  SmileOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport \"./Stat.css\";\r\nconst style = {\r\n  background: \"white\",\r\n  padding: \"6px\",\r\n  margin: \"12px\",\r\n};\r\n\r\nfunction Stat() {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div className=\"statStyle\">\r\n      <br />\r\n      <h2 className=\"titstyle\">{t(\"Le vaccin en Tunisie\")}</h2>\r\n      <h1>\r\n        {t(\"Plus De Statistiques\")}\r\n        <br /> {t(\"Sur Les Campagnes De Vaccination\")}\r\n      </h1>\r\n      <br />\r\n      <Row gutter={{ xs: 8, sm: 8, md: 18, lg: 32 }}>\r\n        <Col className=\"gutter-row\" span={8}>\r\n          <div className=\"textStyle\" style={style}>\r\n            <CheckCircleOutlined className=\"iconStyle\" />\r\n            <br />\r\n            <br />\r\n            <h2>1234</h2>\r\n            <p>{t(\"Inscrits\")}</p>\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row\" span={8}>\r\n          <div className=\"textStyle\" style={style}>\r\n            <HighlightOutlined className=\"iconStyle\" />\r\n            <br />\r\n            <br />\r\n            <h2>1234?</h2>\r\n            <p>{t(\"Vaccinés 1ère dose\")} </p>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row\" span={8}>\r\n          <div className=\"textStyle\" style={style}>\r\n            <SmileOutlined className=\"iconStyle\" />\r\n            <br />\r\n            <br />\r\n            <h2> 1234</h2>\r\n            <p>{t(\"Vaccinés 2éme dose\")}</p>{\" \"}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\nexport default Stat;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport \"./Contact.css\";\r\nimport { PhoneOutlined, IeOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst style = {\r\n  background: \"white\",\r\n  padding: \"6px\",\r\n  margin: \"6px\",\r\n};\r\n\r\nfunction Contact() {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div id=\"Contact\">\r\n      <Row gutter={{ xs: 8, sm: 8, md: 18, lg: 32 }}>\r\n        <Col className=\"gutter-row\" span={12}>\r\n          <div style={style} className=\"textStyle\">\r\n            <br />\r\n            <h1>{t(\"Contactez nous pour plus d'information\")}</h1>\r\n            <p>\r\n              <h3>\r\n                {t(\r\n                  \"Appel Gratuit : Centre d'appel disponible Du lundi au Vendredi de 09h à 17h\"\r\n                )}\r\n              </h3>\r\n\r\n              <h3>\r\n                <PhoneOutlined className=\"iconS\" /> +(216) 8010 20 21{\" \"}\r\n              </h3>\r\n\r\n              <h3>\r\n                {\" \"}\r\n                <IeOutlined className=\"iconS\" />\r\n                www.evax.tn{\" \"}\r\n              </h3>\r\n            </p>\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row\" span={12}>\r\n          <div style={style} className=\"textStyle\">\r\n            <br />\r\n            <h1>{t(\"Voulez-vous vous inscrire ?\")}</h1>\r\n            <p>\r\n              <h3>{t(\"Composer le #2021*\")}</h3>\r\n\r\n              <h3>{t(\"Envoyer un SMS à 85 355\")}</h3>\r\n\r\n              <h3>\r\n                {t(\"Appeler le 8010 2021 du lundi au vendredi de 09h à 17h\")}\r\n              </h3>\r\n\r\n              <h3>{t(\"Visiter notre site Evax\")}</h3>\r\n            </p>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst footerS = {\r\n  background: \"rgb(248, 248, 248)\",\r\n  margin: \"20px\",\r\n  pading: \"20px\",\r\n};\r\n// const changeLanguage = (ln) => {\r\n//   return () => {\r\n//     i18n.changeLanguage(ln);\r\n//   };\r\n// };\r\nfunction Footer() {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div style={footerS}>\r\n      <br />\r\n      <br />\r\n      <h5 className=\"hS\">\r\n        {t(\r\n          \"Lorsque vous cliquez sur le bouton Ajouter une demande d'inscription de votre formulaire de demande d'inscription sur evax.tn, vous indiquez que vous connaissez les conditions générales Politique deconfidentialité.\"\r\n        )}{\" \"}\r\n        <br />\r\n        {t(\"Vous acceptez volontairement les termes et conditions fournis.\")}\r\n      </h5>\r\n      <br />\r\n      <h5 className=\"hS\">\r\n        {t(\r\n          \"eVAX est le résultat d'un travail et d'un engagement patriotique commun des équipes du CNI, ISIE, CIMS, ANSI, les opérateurs (TT, Ooredoo etOrange), Ministère de la Santé et le Ministère des Technologies de la Communication. Lorsque vous cliquez sur le bouton Ajouter une demande d'inscription de votre formulaire de demande d'inscription sur evax.tn, vous indiquez que vous connaissez les conditions générales. Politique de confidentialité . Vous acceptez volontairement les termes et conditions fournis. République de Tunisie - Ministère de la Santé - Portail d’inscription à la campagne de vaccination contre la COVID 19 Tous droits réservés © 2021\"\r\n        )}{\" \"}\r\n      </h5>\r\n      <br /> <br />\r\n    </div>\r\n  );\r\n}\r\nexport default Footer;\r\n","import { Menu, Image, Button } from \"antd\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport logo from \"../img/logoTun.png\";\r\nimport i18n from \"../i18n\";\r\nimport React from \"react\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst centerStyle = {\r\n  justifyContent: \"center\",\r\n  position: \"fixed\",\r\n  zIndex: 1,\r\n  width: \"100%\",\r\n  height: \"11.5%\",\r\n};\r\nconst changeLanguage = (ln) => {\r\n  return () => {\r\n    i18n.changeLanguage(ln);\r\n  };\r\n};\r\n\r\nfunction Navbar() {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Menu mode=\"horizontal\" style={centerStyle}>\r\n        <Menu.Item key=\"img\">\r\n          <Image src={logo} className=\"logos\" />\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"home\">\r\n          <Link to=\"/Home\">{t(\"Welcome\")}</Link>\r\n        </Menu.Item>\r\n\r\n        <SubMenu key=\"Inscription\" title={t(\"S'inscrire\")}>\r\n          <Menu.Item key=\"inscriC\">\r\n            <Link to=\"/inscriptionInCenter\">\r\n              {t(\"Inscription dans un centre\")}\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"inscriP\">\r\n            <Link to=\"/inscriptionPharmacie\">\r\n              {t(\"Inscription dans une pharmacie\")}\r\n            </Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n\r\n        <Menu.Item href=\"#Faq\" target=\"#Faq\" key=\"FAQ\">\r\n          <a href=\"#Faq\"> {t(\"FAQ\")}</a>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"Contact\">\r\n          <a href=\"#Contact\">{t(\"Contactez-nous\")}</a>\r\n        </Menu.Item>\r\n\r\n        <SubMenu key=\"Gestion d'inscription\" title={t(\"Gestion d'inscription\")}>\r\n          <Menu.Item key=\"MAJ\">\r\n            <Link to=\"/updateInscription\">\r\n              {t(\"Mettre à jour inscription\")}\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"rdv\">\r\n            <Link to=\"/reportRdv\">{t(\"Report rendez-vous\")}</Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <Menu.Item key=\"Espace Citoyen\">\r\n          <Link to=\"/citoyenSpace\">{t(\"Espace Citoyen\")}</Link>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"translation\">\r\n          <Button shape=\"circle\" onClick={changeLanguage(\"fr\")}>\r\n            fr\r\n          </Button>\r\n          <Button shape=\"circle\" onClick={changeLanguage(\"en\")}>\r\n            en\r\n          </Button>\r\n          <Button shape=\"circle\" onClick={changeLanguage(\"ar\")}>\r\n            ar\r\n          </Button>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\nexport default Navbar;\r\n","//import ReactDOM from \"react-dom\";\r\nimport \"./styles.css\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ChatBot from \"react-simple-chatbot\";\r\n\r\nclass Review extends Component {\r\n  render() {\r\n    return <div style={{ width: \"100%\", alignItems: \"center\" }}></div>;\r\n  }\r\n}\r\n\r\nReview.propTypes = {\r\n  steps: PropTypes.object,\r\n};\r\n\r\nReview.defaultProps = {\r\n  steps: undefined,\r\n};\r\n\r\nclass Chatbot extends Component {\r\n  state = {\r\n    opened: false\r\n  }\r\n\r\n  toggleFloating = ({ opened }) => {\r\n    this.setState({ opened }); \r\n  }\r\n  render() {\r\n    const { opened } = this.state;\r\n    return (\r\n      <ChatBot\r\n      floating={true}\r\n      opened={opened}\r\n      toggleFloating={this.toggleFloating}\r\n        steps={[\r\n          {\r\n            id: \"1\",\r\n            component: <Review />,\r\n            asMessage: true,\r\n            trigger: \"choose-language\",\r\n          },\r\n\r\n          {\r\n            id: \"choose-language\",\r\n            message: \"Bonjour veuillez choisir la langues qui vous convient ************************ Hello please choose the language that suits you ****************************مرحبا الرجاء اختيار اللغة التي تناسبك \",\r\n            trigger: \"languages\",\r\n          },\r\n          {\r\n            id: \"languages\",\r\n            options: [\r\n              { value: \"Arabe\", label:\"عربية\", trigger: \"ar-questions\" },\r\n              { value: \"Francais\", label: \"Francais\", trigger: \"fr-questions\" },\r\n              { value: \"Anglais\", label: \"English\", trigger: \"en-questions\" },\r\n            ],\r\n          },\r\n          {\r\n            id: \"ar-questions\",\r\n            message: \"  ?مرحبا هل تريد طرح أي سؤال\",\r\n            trigger: \"ar-question-number\",\r\n          },\r\n          {\r\n            id: \"ar-questions-other\",\r\n            message: \"  ?  مرحبا هل تريد طرح أي سؤال اخر \",\r\n            trigger: \"ar-question-number\",\r\n          },\r\n          {\r\n            id: \"fr-questions\",\r\n            message: \"Voulez-vous poser une question ?\",\r\n            trigger: \"fr-question-number\",\r\n          },\r\n          {\r\n            id: \"fr-questions-other\",\r\n            message: \"Voulez-vous poser une autre question ?\",\r\n            trigger: \"fr-question-number\",\r\n          },\r\n          {\r\n            id: \"en-questions\",\r\n            message: \" Do u want to ask a question ?\",\r\n            trigger: \"en-question-number\",\r\n          },\r\n          {\r\n            id: \"en-questions-other\",\r\n            message: \" Do u want to ask another question ?\",\r\n            trigger: \"en-question-number\",\r\n          },\r\n          {\r\n            id: \"ar-question-number\",\r\n            options: [\r\n              { value: \"yes\", label: \"نعم\", trigger: \"ar-question-yes\" },\r\n              { value: \"no\", label: \"لا\", trigger: \"ar-end-message\" },\r\n            ],\r\n          },\r\n          {\r\n            id: \"fr-question-number\",\r\n            options: [\r\n              { value: \"yes\", label: \"Oui\", trigger: \"fr-question-yes\" },\r\n              { value: \"no\", label: \"Non\", trigger: \"fr-end-message\" },\r\n            ],\r\n          },\r\n          {\r\n            id: \"en-question-number\",\r\n            options: [\r\n              { value: \"yes\", label: \"Yes\", trigger: \"en-question-yes\" },\r\n              { value: \"no\", label: \"No\", trigger: \"en-end-message\" },\r\n            ],\r\n          },\r\n          {\r\n            id: \"ar-question-yes\",\r\n            message: \"?عن ماذا تريد أن تستفسر\",\r\n            trigger: \"ar-number\",\r\n          },\r\n          {\r\n            id: \"fr-question-yes\",\r\n            message: \"Sur quoi voulez-vous vous renseigner ?\",\r\n            trigger: \"fr-number\",\r\n          },\r\n          {\r\n            id: \"en-question-yes\",\r\n            message: \"What do you want to inquire about?\",\r\n            trigger: \"en-number\",\r\n          },\r\n          {\r\n            id: \"en-number\",\r\n            options: [\r\n              {\r\n                value: \"1\",\r\n                label: \"What are the goals of vaccination?\",\r\n                trigger: \"en-question 1\",\r\n              },\r\n              {\r\n                value: \"2\",\r\n                label: \"How to register for the Covid-19 vaccine?\",\r\n                trigger: \"en-question 2\",\r\n              },\r\n              {\r\n                value: \"3\",\r\n                label: \"Where will the vaccination take place?\",\r\n                trigger: \"en-question 3\",\r\n              },\r\n              {\r\n                value: \"4\",\r\n                label: \"Will the COVID-19 vaccine be free? \",\r\n                trigger: \"en-question 4\",\r\n              },\r\n              {\r\n                value: \"5\",\r\n                label:\"What should I do if I encounter a problem while registering?\",\r\n                trigger: \"en-question 5\",\r\n              },\r\n              \r\n            ],\r\n          },\r\n          {\r\n            id: \"en-question 1\",\r\n            message:\r\n              \"The first goal of vaccination is to reduce the number of serious cases of Covid-19 and thus the number of deaths, which is confirmed by the results of clinical studies of vaccines that have proven their effectiveness.\",\r\n            trigger: \"en-questions-other\",\r\n          },\r\n          {\r\n            id: \"en-question 2\",\r\n            message:\r\n              \"Website: www.evax.tn / SMS: 85355/ USSD : *2021#\",\r\n            \r\n            trigger: \"en-questions-other\",\r\n          },\r\n          {\r\n            id: \"en-question 3\",\r\n            message:\r\n              \"There will be 25 regional vaccination centers and about 200 regional vaccination centers to be determined by the regional authorities according to the criteria\",\r\n            trigger: \"en-questions-other\",\r\n          },\r\n          {\r\n            id: \"en-question 4\",\r\n            message:\r\n              \"Yes. Vaccination will be free for everyone in Tunisia, but according to the priority set by the authorities\",\r\n            trigger: \"en-questions-other\",\r\n          },\r\n          {\r\n            id: \"en-question 5\",\r\n            message:\r\n              \"A toll-free number was created for inquiries throughout the vaccination campaign. Toll Free: 80102021, open Monday to Friday from midnight to 5 pm\",\r\n            trigger: \"en-questions-other\",\r\n          },\r\n          \r\n          {\r\n            id: \"fr-number\",\r\n            options: [\r\n              {\r\n                value: \"1\",\r\n                label: \"Quels sont les objectifs de la vaccination ?\",\r\n                trigger: \"fr-question 1\",\r\n              },\r\n              {\r\n                value: \"2\",\r\n                label: \"Comment s'inscrire au vaccin Covid-19 ?\",\r\n                trigger: \"fr-question 2\",\r\n              },\r\n              {\r\n                value: \"3\",\r\n                label: \"Où aura lieu la vaccination ?\",\r\n                trigger: \"fr-question 3\",\r\n              },\r\n              {\r\n                value: \"4\",\r\n                label: \"Le vaccin COVID-19 sera-t-il gratuit ? \",\r\n                trigger: \"fr-question 4\",\r\n              },\r\n              {\r\n                value: \"5\",\r\n                label: \"Que faire si je rencontre un problème lors de mon inscription ?\",\r\n                trigger: \"fr-question 5\",\r\n              },\r\n              \r\n            ],\r\n          },\r\n          {\r\n            id: \"fr-question 1\",\r\n            message:\r\n              \"Le premier objectif de la vaccination est de réduire le nombre de cas graves de Covid-19 et donc le nombre de décès, ce qui est confirmé par les résultats des études cliniques de vaccins qui se sont avérés efficaces.\",\r\n            trigger: \"fr-questions-other\",\r\n          },\r\n          {\r\n            id: \"fr-question 2\",\r\n            message:\r\n            \"Website: www.evax.tn / SMS: 85355/ USSD : *2021#\",\r\n            trigger: \"fr-questions-other\",\r\n          },\r\n          {\r\n            id: \"fr-question 3\",\r\n            message:\r\n              \"Il y aura 25 centres régionaux de vaccination et environ 200 centres régionaux de vaccination à déterminer par les autorités régionales selon les critères\",\r\n            trigger: \"fr-questions-other\",\r\n          },\r\n          {\r\n            id: \"fr-question 4\",\r\n            message:\r\n              \"Oui. La vaccination sera gratuite pour tous en Tunisie, mais selon la priorité fixée par les autorités.\",\r\n            trigger: \"fr-questions-other\",\r\n          },\r\n          {\r\n            id: \"fr-question 5\",\r\n            message:\r\n              \"Un numéro vert a été créé pour les demandes de renseignements tout au long de la campagne de vaccination. Numéro vert : 80102021, ouvert du lundi au vendredi de minuit à 17h\",\r\n            trigger: \"fr-questions-other\",\r\n          },\r\n          \r\n          {\r\n            id: \"ar-number\",\r\n            options: [\r\n              {\r\n                value: \"1\",\r\n                label: \"ما هي أهداف التلقيح؟\",\r\n                trigger: \"ar-question 1\",\r\n              },\r\n              {\r\n                value: \"2\",\r\n                label: \"ماذا أفعل إذا واجهت مشكلة أثناء التسجيل؟\",\r\n                trigger: \"ar-question 2\",\r\n              },\r\n              {\r\n                value: \"3\",\r\n                label: \"أين سيتم التلقيح ؟\",\r\n                trigger: \"ar-question 3\",\r\n              },\r\n              {\r\n                value: \"4\",\r\n                label: \"هل سيكون لقاح كوفيد-19 مجانيًا ؟ \",\r\n                trigger: \"ar-question 4\",\r\n              },\r\n              {\r\n                value: \"5\",\r\n                label: \"كيف يتم التسجيل للحصول على لقاح Covid-19؟\",\r\n                trigger: \"ar-question 5\",\r\n              },\r\n              \r\n            ],\r\n          },\r\n          {\r\n            id: \"ar-question 1\",\r\n            message:\r\n              \"الهدف الأول من التلقيح هو تقليل عدد الحالات الخطيرة من الكوفيد-19 و بالتالي عدد الوفايات، و هو ما أكدته نتائج الدراسات السريرية للقاحات التي أثبتت فاعليتها.\",\r\n            trigger: \"ar-questions-other\",\r\n          },\r\n          {\r\n            id: \"ar-question 2\",\r\n            message:\r\n              \"تم إنشاء رقم مجاني للإستفسار طوال حملة التلقيح. الرقم المجاني: 80102021، مفتوح من الاثنين إلى الجمعة من منتصف الليل حتى الساعة 5 مساءً\",\r\n            trigger: \"ar-questions-other\",\r\n          },\r\n          {\r\n            id: \"ar-question 3\",\r\n            message:\r\n              \"سيكون هناك 25 مركزا تلقيح جهويا و حوالي 200 مركز تلقيح جهوي يتم تحديده من قبل السلطات الجهوية حسب معاييير\",\r\n            trigger: \"ar-questions-other\",\r\n          },\r\n          {\r\n            id: \"ar-question 4\",\r\n            message:\r\n              \"نعم. التلقيح سيكون مجانيا للجميع في تونس ولكن حسب الأولوية التي تحددها السلطات.\",\r\n            trigger: \"ar-questions-other\",\r\n          },\r\n          {\r\n            id: \"ar-question 5\",\r\n            message:\r\n              \"الموقع: www.evax.tn ,الرسائل القصيرة: 85355 ,USSD : *2021#\",\r\n            trigger: \"ar-questions-other\",\r\n          },\r\n          \r\n          {\r\n            id: \"ar-end-message\",\r\n            message: \"  ! وداعا\",\r\n            end: true,\r\n          },\r\n          {\r\n            id: \"fr-end-message\",\r\n            message: \"Au revoir !\",\r\n            end: true,\r\n          },\r\n          {\r\n            id: \"en-end-message\",\r\n            message: \"Good bye !\",\r\n            end: true,\r\n          },\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chatbot;\r\n//removing for testing\r\n// const rootElement = document.getElementById(\"root\");\r\n// ReactDOM.render(<Chatbot />, rootElement);","import React from \"react\";\r\nimport { Carousel, Image } from \"antd\";\r\n\r\nimport Faq from \"./Faq\";\r\nimport Stat from \"./Stat\";\r\nimport Contact from \"./Contact\";\r\nimport Footer from \"./Footer\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport tal from \"../img/box-img2.jpg\";\r\nimport tal3 from \"../img/tal3.jpg\";\r\n\r\nimport Chatbot from \"../Chatbot\";\r\n\r\nconst contentStyle = {\r\n  height: \"650px\",\r\n  color: \"black\",\r\n  lineHeight: \"160px\",\r\n  innerHeight: \"100%\",\r\n  background: \"white\",\r\n};\r\n\r\nfunction Home() {\r\n  return (\r\n    <div id=\"Home\">\r\n      <Navbar />\r\n\r\n      <Carousel autoplay>\r\n        <div>\r\n          <Image src={tal3} style={contentStyle} className=\"full\" />\r\n        </div>\r\n        <div>\r\n          <Image src={tal} className=\"full\" style={contentStyle} />\r\n        </div>\r\n      </Carousel>\r\n      <br />\r\n      <Faq />\r\n      <br />\r\n      <Stat />\r\n      <br />\r\n      <Contact />\r\n      <br />\r\n      <Chatbot />\r\n      <br />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { DesktopOutlined, PieChartOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./SideBar.css\";\r\nconst { Header, Sider } = Layout;\r\n\r\nfunction SideBar() {\r\n  const [collapsed, SetCollapsed] = useState(false);\r\n  return (\r\n    <div>\r\n      <Sider\r\n        collapsible\r\n        collapsed={collapsed}\r\n        onCollapse={() => SetCollapsed(!collapsed)}\r\n      >\r\n        <Header className=\"site-layout-background\" style={{ padding: 0 }} />\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\r\n          <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n            <Link exact to=\"/Admin\">\r\n              {\" \"}\r\n              Stats\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\r\n            <Link exact to=\"/ManageCenter\">\r\n              Manage Centers\r\n            </Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"3\" icon={<DesktopOutlined />}>\r\n            <Link exact to=\"/ManagePharmacy\">\r\n              Manage Pharmacies\r\n            </Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"4\" icon={<DesktopOutlined />}>\r\n            <Link exact to=\"/ManageVaccines\">\r\n              Manage Vaccines\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"5\" icon={<DesktopOutlined />}>\r\n            <Link exact to=\"/ManageVolunteers\">\r\n              Manage Volunteers\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"6\" icon={<DesktopOutlined />}>\r\n          <Link exact to=\"/ManageOpenDay\">\r\n            Open Days\r\n            </Link>\r\n          </Menu.Item>\r\n          \r\n        </Menu>\r\n      </Sider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import Axios from \"axios\";\r\n\r\nlet baseUrl = \"http://localhost:5000/api/centers\";\r\n\r\nexport const addCenter = async (center) => {\r\n  const result = await Axios.post(baseUrl + \"/add\", center);\r\n  /* .then((res) => {\r\n      if (res.status === 201) {\r\n        console.log(\"sucess\");\r\n        console.log(res.data);\r\n      }\r\n    })\r\n\r\n    .catch(function(error) {\r\n      if (error.response) {\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n      }\r\n    }); */\r\n\r\n  return result.data.newCenter;\r\n};\r\n\r\nexport const updateCenter = async (center) => {\r\n  const result = await Axios.put(baseUrl + \"/update\", center);\r\n  return result.data.updatedCenter;\r\n};\r\n\r\nexport const deleteCenter = async (name) => {\r\n  const result = await Axios.delete(baseUrl + \"/delete/\" + name);\r\n  return result.data;\r\n};\r\n\r\nexport const fetchCenterByName = async (name) => {\r\n  const result = await Axios.get(baseUrl + \"/name/\" + name);\r\n\r\n  return result.data.center;\r\n};\r\n\r\nexport const fetchCenters = async () => {\r\n  // await delay(500)\r\n  const result = await Axios.get(baseUrl + \"/all\");\r\n  return result.data.centers;\r\n};\r\nexport const updateCenterVaccine = async (centerName, vaccinId, quantity) => {\r\n  const result = await Axios.post(`${baseUrl}/deposit/${centerName}`, {\r\n    idVacc: vaccinId,\r\n    amount: quantity,\r\n  });\r\n  return result.data.center;\r\n};\r\n","import * as types from \"../../../redux/types\";\r\nimport * as api from \"../../../services/centers.service\";\r\nexport const setSelectedCenter = (center) => ({\r\n  type: types.SET_SELECTED_CENTER,\r\n  center,\r\n});\r\n\r\nexport const setDisplayed = (value) => ({\r\n  type: types.SET_DISPLAYED,\r\n  value,\r\n});\r\n\r\nexport const setDisplayUpdate = (value) => ({\r\n  type: types.SET_DISPLAY_UPDATE,\r\n  value,\r\n});\r\n\r\nexport const setDisplayUpdateVac = (value) => ({\r\n  type: types.SET_DISPLAY_UPDATE_VAC,\r\n  value,\r\n});\r\n\r\nexport const fetchCenters = () => async (dispatch) => {\r\n  dispatch({\r\n    type: types.FETCH_CENTERS_REQUEST,\r\n  });\r\n\r\n  try {\r\n    // const centers =\r\n\r\n    dispatch({\r\n      type: types.FETCH_CENTERS_SUCCESS,\r\n      list: await api.fetchCenters(),\r\n    });\r\n    // console.log(centers)\r\n  } catch (e) {\r\n    dispatch({\r\n      type: types.FETCH_CENTERS_FAILURE,\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchCenterByName = (id) => async (dispatch) => {\r\n  try {\r\n    const center = await api.fetchCenterByName(id);\r\n    dispatch({\r\n      type: types.FETCH_CENTER_BY_ID,\r\n      center,\r\n    });\r\n  }catch(err){\r\n    dispatch({\r\n      type: types.SET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  }\r\n};\r\n\r\nexport const addCenter = (center) => async (dispatch) => {\r\n  try {\r\n    const newCenter = await api.addCenter(center);\r\n    console.log(newCenter);\r\n    dispatch({\r\n      type: types.ADD_CENTER,\r\n      center: newCenter, //enjez ines w ghalet en plus center:newCenter,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.SET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateCenter = (center) => async (dispatch) => {\r\n  try {\r\n    const updatedCenter = await api.updateCenter(center);\r\n    dispatch({\r\n      type: types.UPDATE_CENTER,\r\n      center: updatedCenter,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.SET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  }\r\n};\r\nexport const deleteCenter = (name) => async (dispatch) => {\r\n  try {\r\n    await api.deleteCenter(name);\r\n    dispatch({\r\n      type: types.DELETE_CENTER,\r\n      center: name,\r\n    });\r\n  }catch(err){\r\n    dispatch({\r\n      type: types.SET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  }\r\n};\r\n\r\nexport const addVaccineToCenter = (nameCenter, idVaccin, quantity) => async (\r\n  dispatch\r\n) => {\r\n  try {const center = await api.updateCenterVaccine(nameCenter, idVaccin, quantity); //await call api\r\n  dispatch({\r\n    type: types.ADD_VACCINE_TO_CENTER,\r\n    center: center,\r\n  });\r\n  }catch(err){\r\n    dispatch({\r\n      type: types.SET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  }\r\n  //dispatch action ....\r\n};\r\n","export const SET_SELECTED_USER = \"SET_SELECTED_USER\";\r\nexport const FETCH_USER_REQUEST = \"FETCH_USER_REQUEST\";\r\nexport const FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\";\r\nexport const FETCH_USERS_FAILURE = \"FETCH_USERS_FAILURE\";\r\nexport const REGISTER_USER = \"REGISTER_USER\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const FETCH_LOGIN_REQUEST = \"FETCH_LOGIN_REQUEST\";\r\n//types centre\r\nexport const SET_SELECTED_CENTER = \"SET_SELECTED_CENTER\";\r\nexport const FETCH_CENTERS_REQUEST = \"FETCH_CENTERS_REQUEST\";\r\nexport const FETCH_CENTERS_SUCCESS = \"FETCH_CENTERS_SUCCESS\";\r\nexport const FETCH_CENTERS_FAILURE = \"FETCH_CENTERS_FAILURE\";\r\nexport const SET_DISPLAYED = \"SET_DISPLAYED\";\r\nexport const SET_DISPLAY_UPDATE = \"SET_DISPLAY_UPDATE\";\r\nexport const SET_DISPLAY_UPDATE_VAC = \"SET_DISPLAY_UPDATE_VAC\";\r\n\r\nexport const FETCH_CENTER_BY_ID = \"FETCH_CENTER_BY_ID\";\r\nexport const ADD_CENTER = \"ADD_CENTER\";\r\nexport const UPDATE_CENTER = \"UPDATE_CENTER\";\r\nexport const DELETE_CENTER = \"DELETE_CENTER\";\r\nexport const ADD_VACCINE_TO_CENTER = \"ADD_VACCINE_TO_CENTER\";\r\n\r\n//types pharmacie\r\nexport const SET_SELECTED_PHARMACY = \"SET_SELECTED_PHARMACY\";\r\nexport const FETCH_PHARMACIES_REQUEST = \"FETCH_PHARMACIES_REQUEST\";\r\nexport const FETCH_PHARMACIES_SUCCESS = \"FETCH_PHARMACIES_SUCCESS\";\r\nexport const FETCH_PHARMACIES_FAILURE = \"FETCH_PHARMACIES_FAILURE\";\r\nexport const SET_DISPLAYED_PHARMACY = \"SET_DISPLAYED_PHARMACY\";\r\nexport const FETCH_PHARMACY_BY_ID = \"FETCH_PHARMACY_BY_ID\";\r\nexport const ADD_PHARMACY = \"ADD_PHARMACY\";\r\nexport const UPDATE_PHARMACY = \"UPDATE_PHARMACY\";\r\nexport const DELETE_PHARMACY = \"DELETE_PHARMACY\";\r\n\r\n//types vaccin\r\nexport const SET_SELECTED_VACCINE = \"SET_SELECTED_VACCINE\";\r\nexport const FETCH_VACCINES_REQUEST = \"FETCH_VACCINES_REQUEST\";\r\nexport const FETCH_VACCINES_SUCCESS = \"FETCH_VACCINES_SUCCESS\";\r\nexport const FETCH_VACCINES_FAILURE = \"FETCH_VACCINES_FAILURE\";\r\n\r\nexport const FETCH_VACCINE_BY_ID = \"FETCH_VACCINE_BY_ID\";\r\nexport const ADD_VACCINE = \"ADD_VACCINE\";\r\nexport const UPDATE_VACCINE = \"UPDATE_VACCINE\";\r\nexport const DELETE_VACCINE = \"DELETE_VACCINE\";\r\nexport const SET_DISPLAYED_VACCINE = \"SET_DISPLAYED_VACCINE\";\r\nexport const SET_DISPLAY_UPDATE_VACCINE = \"SET_DISPLAY_UPDATE_VACCINE\";\r\n\r\n//types register in center\r\n\r\nexport const REGISTER_CENTER = \"REGISTER_CENTER\";\r\n\r\n//types users\r\nexport const ADD_USER = \"ADD_USER\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const DELETE_USER = \"DELETE_USER\";\r\nexport const GET_ALL_USER = \"GET_ALL_USER\";\r\nexport const SET_DISPLAYED_USER = \"SET_DISPLAYED_USER\";\r\nexport const SET_DISPLAY_UPDATE_USER = \"SET_DISPLAY_UPDATE_USER\";\r\nexport const GET_USER_BY_CIN = \"GET_USER_BY_CIN\";\r\n\r\n//RDV actions type\r\nexport const ADD_RDV = \"ADD_RDV\";\r\nexport const UPDATE_RDV = \"UPDATE_RDV\";\r\n\r\n//ERROR\r\nexport const SET_ERRORS = \"SET_ERRORS\"\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\"\r\nexport const SET_FLAG = \"SET_FLAG\"\r\n\r\n\r\n\r\n//jounées porte ouverte\r\nexport const ADD_OPEN_DAY = \"ADD_OPEN_DAY\";\r\nexport const SET_SELECTED_OPEN_DAY = \"SET_SELECTED_OPEN_DAY\";\r\nexport const SET_DISPLAYED_OPEN_DAY = \"SET_DISPLAYED_OPEN_DAY\";\r\nexport const GET_ALL_OPEN_DAYS = \"GET_ALL_OPEN_DAYS\";\r\nexport const SET_DISPLAY_UPDATE_OPEN_DAY = \"SET_DISPLAY_UPDATE_OPEN_DAY\";\r\nexport const UPDATE_OPEN_DAY = \"UPDATE_OPEN_DAY\"; // we need it ?\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Layout, Statistic, Row, Col } from \"antd\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\nimport * as actions from \"../redux/actions/centers\";\r\nconst { Content } = Layout;\r\n\r\nfunction Admin() {\r\n  const centers = useSelector((state) => state.centers.list);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(actions.fetchCenters());\r\n    } catch (e) {\r\n      console.log(\"errroooor\");\r\n    }\r\n  }, );\r\n  return (\r\n    centers.list && centers.list.length >0 &&\r\n    <div>\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <SideBar />\r\n        <Layout className=\"site-layout\">\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            <div\r\n              className=\"site-layout-background\"\r\n              style={{ padding: 24,marginRight:20, minHeight: 360 }}\r\n            >\r\n              {/* <Progress type=\"circle\" percent={75} />\r\n              <Progress type=\"circle\" percent={70} status=\"exception\" />\r\n              <Progress type=\"circle\" percent={100} /> */}\r\n              {/* <ResponsiveContainer width=\"20%\" height=\"20%\"> */}\r\n              <BarChart\r\n                width={1500}\r\n                height={300}\r\n                data={centers}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"city\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"center_capacity\" fill=\"#8884d8\" />\r\n                <Bar dataKey=\"number_vaccine\" fill=\"#82ca9d\" />\r\n              </BarChart>\r\n              {/* </ResponsiveContainer> */}\r\n              <br />\r\n              <Row gutter={16}>\r\n                <Col span={12}>\r\n                  <Statistic title=\"Active Centers\" value={centers.length} />\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Statistic title=\"Vaccinated users\" value={112} />\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n\r\n            {/* <div\r\n              className=\"site-layout-background\"\r\n              style={{ padding: 24, minHeight: 360, marginTop:12 }}\r\n            >\r\n            </div> */}\r\n          </Content>\r\n        </Layout>{\" \"}\r\n      </Layout>\r\n    </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","export default [\r\n \"Ariana\",\r\n \"Beja\",\r\n \"Ben Arous\",\r\n \"Bizerte\",\r\n \"Gabès\",\r\n \"Gafsa\",\r\n \"Jendouba\",\r\n \"Kairouan\",\r\n \"Kasserine\",\r\n \"Kébili\",\r\n \"Kef\",\r\n\"Mahdia\",\r\n\"Manouba\",\r\n\"Médenine\",\r\n\"Monastir\",\r\n\"Nabeul\",\r\n\"Sfax\",\r\n\"Sidi Bouzid\",\r\n\"Siliana\",\r\n\"Sousse\",\r\n\"Tataouine\",\r\n\"Tozeur\",\r\n\"Tunis\",\r\n\"Zaghouan\"\r\n]","const villes = [\r\n    \r\n    {   gov:\"Beja\", \r\n        cities:[    \"AMDOUN\",\r\n                \"BEJA NORD\",\r\n                \"BEJA SUD\",\r\n                \"GOUBELLAT\",\r\n                \"MEJEZ EL BAB\",\r\n                \"NEFZA\",\r\n                \"TEBOURSOUK\",\r\n                \"TESTOUR\",\r\n                \"THIBAR\"]\r\n    },\r\n    {\r\n        gov:\"Ariana\", \r\n        cities :[  \"Ariana\"\t,\r\n        \t    \"Soukra\",\r\n                \"Raoued\",\r\n                \"Kalâat el-Andalous\",\r\n                \"Sidi Thabet\",\r\n                \"Ettadhamen-Mnihla\"]\r\n    },\r\n    {   gov:\"Ben Arous\", \r\n        cities:[\"BEN AROUS\",\r\n                \"BOU MHEL\",\r\n                \"EL MOUROUJ\",\r\n                \"EZZAHRA\",\r\n                \"FOUCHANA\",\r\n                \"HAMMAM CHATT\",\r\n                \"HAMMAM LIF\",\r\n                \"MEGRINE\",\r\n                \"MOHAMADIA\",\r\n                \"MORNAG\",\r\n                \"NOUVELLE MEDINA\",\r\n                \"RADES\"\r\n                ]},\r\n    {\r\n        gov:\"Bizerte\", \r\n        cities:[     \"BIZERTE NORD\",\r\n                        \"BIZERTE SUD\",\r\n                        \"EL ALIA\",\r\n                        \"GHAR EL MELH\",\r\n                        \"GHEZALA\",\r\n                        \"JOUMINE\",\r\n                        \"MATEUR\",\r\n                        \"MENZEL BOURGUIBA\",\r\n                        \"MENZEL JEMIL\",\r\n                        \"RAS JEBEL\",\r\n                        \"SEJNANE\",\r\n                        \"TINJA\",\r\n                        \"UTIQUE\",\r\n                        \"ZARZOUNA\"\r\n            ]},\r\n    {gov:\"Gabès\", \r\n    cities:[   \"DKHILET TOUJANE\",\r\n                \"EL HAMMA\",\r\n                \"GABES MEDINA\",\r\n                \"GABES OUEST\",\r\n                \"GABES SUD\",\r\n                \"GHANNOUCHE\",\r\n                \"MARETH\",\r\n                \"MATMATA\",\r\n                \"MENZEL HABIB\",\r\n                \"METOUIA\",\r\n                \"NOUVELLE MATMATA\"\r\n            ]},\r\n   {gov: \"Gafsa\", \r\n   cities:[]},\r\n    {gov:\"Jendouba\", \r\n    cities:[]},\r\n    {gov:\"Kairouan\", \r\n    cities:[]},\r\n    {gov:\"Kasserine\", \r\n    cities:[\r\n            \"Kasserine\",\r\n            \"Sbeitla\",\r\n            \"Foussena\",\r\n            \"Thala\",\r\n            \"Sbiba\",\r\n            \"Haidra\",\r\n            \"Tajerouine\",\r\n            \"Feriana\",\r\n            \"Ayoun\"\r\n    ]},\r\n    {gov:\"Kébili\", \r\n    cities:[]},\r\n    {gov:\"Kef\", \r\n    cities:[]},\r\n   {gov:\"Mahdia\", \r\n   cities:[\r\n        \"Mahdia\",   \r\n        \"Rejiche\",\r\n        \"La chebba\",\r\n        \"Boumerdes\",\r\n        \"Hiboun\",\r\n        \"El jem\",\r\n        \"Chorbbane\",\r\n        \"Hbira\",\r\n        \"Kerker\",\r\n        \"Kssour essef\",\r\n        \"Tlelsa\",\r\n        \"Esouassi\",\r\n        \"Bir bradaa\",\r\n        \"Sidi Alouane\"\r\n\r\n   ]},\r\n   {gov:\"Manouba\", \r\n   cities:[  \"BORJ EL AMRI\",\r\n                \"DOUAR HICHER\",\r\n                \"EL BATTAN\",\r\n                \"JEDAIDA\",\r\n                \"LA MANNOUBA\",\r\n                \"MORNAGUIA\",\r\n                \"OUED ELLIL\",\r\n                \"TEBOURBA\"  \r\n            ]},\r\n   {gov:\"Médenine\", \r\n   cities:[]},\r\n   {gov:\"Monastir\", \r\n   cities:[]},\r\n   {gov:\"Nabeul\", \r\n   cities:[]},\r\n   {gov:\"Sfax\", \r\n   cities:[]},\r\n   {gov:\"Sidi Bouzid\", \r\n   cities:[]},\r\n   {gov:\"Siliana\", \r\n   cities:[]},\r\n   {gov:\"Sousse\", \r\n   cities:[\r\n        \"Sousse\",\r\n        \"Ennifidha\",\r\n        \"Msaken\",\r\n        \"Hergla\",\r\n        \"Akouda\",\r\n        \"Hammem sousse\",\r\n        \"Sidi bou Ali\",\r\n        \"Kalaa lekbira\",\r\n        \"Bouficha\",\r\n        \"Chat mariem\",\r\n        \"Tekrouna\",\r\n        \"Sehline\",\r\n        \"Jammel\"\r\n    \r\n   ]},\r\n   {gov:\"Tataouine\", \r\n   cities:[]},\r\n   {gov:\"Tozeur\", \r\n   cities:[]},\r\n   {gov:\"Tunis\", \r\n   cities:[]},\r\n   {gov:\"Zaghouan\", \r\n   cities:[]}\r\n] \r\nexport default villes\r\n ","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"; \r\nimport gouvernorat from \"../../../constants/gouvernorat\";\r\nimport villes from \"../../../constants/villes\";\r\nimport { Modal, Button, InputNumber } from \"antd\";\r\nimport { Form, Input, Select} from \"antd\";\r\nimport * as actions from \"../../../redux/actions/centers\";\r\n\r\nfunction UpdateCenter() {\r\n  const isModalVisible = useSelector((state) => state.centers.displayUpdate);\r\n  const center = useSelector((state) => state.centers.selectedCenter);\r\n  const [cities, setCities] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  const closeModal = () => {\r\n    console.log(center)\r\n    dispatch(actions.setDisplayUpdate(false));\r\n  };\r\n  \r\n  const changeGov = (gover) => { \r\n    const found = villes.find((ville) => ville.gov === gover).cities;\r\n    setCities(found ? found : []);\r\n  };\r\n \r\n  const handleSubmit = async (values) => {\r\n    console.log(values)\r\n    const Updatedcenter = {\r\n      id:center.id,\r\n      name:values.name,\r\n      governorate: values.governorate,\r\n      city: values.city,\r\n      center_capacity: values.capacity,\r\n      number_vaccine: 0,\r\n    };\r\n    dispatch(actions.updateCenter(Updatedcenter));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Update new center\"\r\n      visible={isModalVisible}\r\n      footer={null}\r\n      onCancel={closeModal}\r\n    >\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        onFinish={handleSubmit} \r\n        initialValues={{\r\n          \"name\": center.name,\r\n          \"governorate\": center.governorate,\r\n          \"city\": center.city,\r\n          \"capacity\": center.center_capacity,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          label=\"center_name:\"\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"gouvernorat\"\r\n          name=\"governorate\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select onChange={changeGov}>\r\n            <Select.Option>--Choose Governorate--</Select.Option>\r\n            {gouvernorat?.map((gov, key) => {\r\n              return (\r\n                <Select.Option key={key} value={gov}>\r\n                  {gov}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"city\"\r\n          label=\"city\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select>\r\n            <Select.Option>--Choose City--</Select.Option>\r\n            {cities?.map((city, key) => {\r\n              return (\r\n                <Select.Option key={key} value={city}>\r\n                  {city}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"center_capacity:\"\r\n          name=\"capacity\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: 'number',\r\n              min: 0,\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Button type=\"primary\" htmlType=\"submit\" shape=\"round\"> Update center </Button>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\nexport default UpdateCenter;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button, InputNumber,Form, Input, Select } from \"antd\"; \r\n\r\nimport * as actions from \"../../../redux/actions/centers\";\r\nimport gouvernorat from \"../../../constants/gouvernorat\";\r\nimport villes from \"../../../constants/villes\";\r\n\r\nfunction AddCenter() {\r\n  const isModalVisible = useSelector((state) => state.centers.displayed);\r\n  const [cities, setCities] = useState([]);    \r\n  const dispatch = useDispatch();\r\n\r\n  const closeModal = () => {\r\n    dispatch(actions.setDisplayed(false));\r\n  };\r\n  \r\n\r\n  const changeGov = (gover) => { \r\n    const found = villes.find((ville) => ville.gov === gover).cities;\r\n    setCities(found ? found : []);\r\n  };\r\n \r\n  const handleSubmit = async (values) => { \r\n    const center = {\r\n      name:values.name,\r\n      governorate: values.governorate,\r\n      city: values.city,\r\n      center_capacity: values.capacity,\r\n      number_vaccine: 0,\r\n    };\r\n    dispatch(actions.addCenter(center));\r\n  };\r\n  return (\r\n    <Modal\r\n      title=\"Add new center\"\r\n      visible={isModalVisible}\r\n      onCancel={closeModal}\r\n      footer={null}\r\n    >\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        onFinish={handleSubmit} \r\n      >\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"center_name:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"gouvernorat\"\r\n          name=\"governorate\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select onChange={changeGov}>\r\n            <Select.Option>--Choose Governorate--</Select.Option>\r\n            {gouvernorat?.map((gov, key) => {\r\n              return (\r\n                <Select.Option key={key} value={gov}>\r\n                  {gov}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"city\"\r\n          name=\"city\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select >\r\n            <Select.Option>--Choose City--</Select.Option>\r\n            {cities?.map((city, key) => {\r\n              return (\r\n                <Select.Option key={key} value={city}>\r\n                  {city}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"center_capacity:\"\r\n          name=\"capacity\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: 'number',\r\n              min: 0,\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber/>\r\n        </Form.Item> \r\n        <Button type=\"primary\" htmlType=\"submit\" shape=\"round\"> Add center </Button>\r\n         \r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\nexport default AddCenter;\r\n","import Axios from \"axios\";\r\n\r\nlet baseUrl = \"http://localhost:5000/api/vaccines/\";\r\n\r\nexport const addVaccine = async (vaccine) => {\r\n  const result = await Axios.post(baseUrl, vaccine);\r\n  console.log(result);\r\n  return result.data.newVaccine;\r\n};\r\n\r\nexport const updateVaccine = async (vaccine) => {\r\n  const result = await Axios.put(baseUrl + vaccine.id, vaccine);\r\n  return result.data.updatedVaccine;\r\n};\r\n\r\nexport const deleteVaccine = async (vaccine_type) => {\r\n  const result = await Axios.delete(baseUrl +'delete/' +vaccine_type);\r\n  return result.data.vaccine;\r\n};\r\n\r\nexport const fetchVaccines = async () => {\r\n  const result = await Axios.get(baseUrl + \"all\");\r\n  return result.data.vaccines;\r\n};\r\n\r\nexport const getVaccineById = async (id) => {\r\n  const result = await Axios.get(baseUrl + id);\r\n  return result.data.vaccine;\r\n};\r\n","import * as types from \"../../types\";\r\nimport * as api from \"../../../services/vaccines.service\";\r\n\r\nexport const setSelectedVaccine = (vaccine) => ({\r\n  type: types.SET_SELECTED_VACCINE,\r\n  vaccine,\r\n});\r\n\r\nexport const fetchVaccines = () => async (dispatch) => {\r\n  dispatch({\r\n    type: types.FETCH_VACCINES_REQUEST,\r\n  });\r\n\r\n  try {\r\n    dispatch({\r\n      type: types.FETCH_VACCINES_SUCCESS,\r\n      list: await api.fetchVaccines(),\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.SET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getVaccineById = (id) => async (dispatch) => {\r\n  const vaccine = await api.getVaccineById(id);\r\n  dispatch({\r\n    type: types.FETCH_VACCINE_BY_ID,\r\n    vaccine,\r\n  });\r\n};\r\n\r\nexport const addVaccine = (vaccine) => async (dispatch) => {\r\n  try {\r\n    const newVaccine = await api.addVaccine(vaccine);\r\n    console.log(newVaccine);\r\n    dispatch({\r\n      type: types.ADD_VACCINE,\r\n      vaccine: newVaccine,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.SET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateVaccine = (vaccine) => async (dispatch) => {\r\n  try {\r\n    const updatedVaccine = await api.updateVaccine(vaccine);\r\n    dispatch({\r\n      type: types.UPDATE_VACCINE,\r\n      vaccine: updatedVaccine,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.SET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\nexport const deleteVaccine = (vaccine_type) => async (dispatch) => {\r\n  await api.deleteVaccine(vaccine_type);\r\n  dispatch({\r\n    type: types.DELETE_VACCINE,\r\n    vaccine: vaccine_type,\r\n  });\r\n};\r\n\r\nexport const setDisplayed = (value) => ({\r\n  type: types.SET_DISPLAYED_VACCINE,\r\n  value,\r\n});\r\n\r\nexport const setDisplayUpdate = (value) => ({\r\n  type: types.SET_DISPLAY_UPDATE_VACCINE,\r\n  value,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button, InputNumber } from \"antd\";\r\nimport { Form, Input, Select } from \"antd\";\r\nimport * as actions from \"../../../redux/actions/centers\";\r\nimport * as vaccActions from \"../../../redux/actions/vaccines\";\r\nfunction AssignVaccine() {\r\n  const isModalVisible = useSelector((state) => state.centers.displayUpdateVac);\r\n  const center = useSelector((state) => state.centers.selectedCenter);\r\n  const vaccines = useSelector((state) => state.vaccines.list);\r\n  const dispatch = useDispatch();\r\n\r\n  const closeModal = () => {\r\n    dispatch(actions.setDisplayUpdateVac(false));\r\n  };\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(vaccActions.fetchVaccines());\r\n    } catch (e) {\r\n      console.log(\"errroooor\");\r\n    }\r\n  }, [dispatch]);\r\n  // const changeVac = (vacc) => {\r\n  //   console.log(vacc);\r\n  //   dispatch(vaccActions.setSelectedVaccine(vacc));\r\n  // };\r\n  const handleSubmit = async (values) => {\r\n    // const Updatedcenter = {\r\n    //   id: center.id,\r\n    //   name: values.name,\r\n    //   type_vaccine: values.type_vaccine,\r\n    //   number_vaccine: values.number_vaccine,\r\n    // };\r\n    dispatch(\r\n      actions.addVaccineToCenter(\r\n        values.name,\r\n        values.type_vaccine,\r\n        values.number_vaccine\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Assign vaccine to center\"\r\n      visible={isModalVisible}\r\n      footer={null}\r\n      onCancel={closeModal}\r\n    >\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        onFinish={handleSubmit}\r\n        initialValues={{\r\n          \"name\": center.name,\r\n          \"type_vaccine\": center.type_vaccine?.vaccine_type,\r\n          \"number_vaccine\": center.number_vaccine,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          label=\"Center Name\"\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Vaccine:\"\r\n          name=\"type_vaccine\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select>\r\n            <Select.Option>--choose vaccine type--</Select.Option>\r\n            {vaccines?.map((vacc, key) => {\r\n              return (\r\n                <Select.Option key={key} value={vacc.vaccine_type}>\r\n                  {vacc.vaccine_type}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Stock\"\r\n          name=\"number_vaccine\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"number\",\r\n              min: 0,\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Button type=\"primary\" htmlType=\"submit\" shape=\"round\">\r\n          {\" \"}\r\n          Assign Vaccine{\" \"}\r\n        </Button>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AssignVaccine;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Layout, Button, notification } from \"antd\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/centers\";\r\nimport * as types from \"../../redux/types\";\r\nimport UpdateCenter from \"./UpdateCenter/UpdateCenter\";\r\nimport SideBar from \"../../SideBar/SideBar\";\r\nimport AddCenter from \"./AddCenter/AddCenter\";\r\nimport AssignVaccine from \"./AssignVaccine/AssignVaccine\";\r\n\r\nconst { Content } = Layout;\r\n// const style = {\r\n//   position: \"absolute\",\r\n//   top: \"50%\",\r\n//   left: \"50%\",\r\n//   transform: \"translate(-50%, -50%)\",\r\n//   width: 400,\r\n//   bgcolor: \"background.paper\",\r\n//   border: \"2px solid #000\",\r\n//   boxShadow: 24,\r\n//   p: 4,\r\n// };\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#DDD\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    padding: \"7px 8px !important\",\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction ManageCenter() {\r\n  const isAddVisible = useSelector((state) => state.centers.displayed);\r\n  const isUpdateVisible = useSelector((state) => state.centers.displayUpdate);\r\n  const isUpdateVacVisible = useSelector(\r\n    (state) => state.centers.displayUpdateVac\r\n  );\r\n  const centers = useSelector((state) => state.centers);\r\n  const dispatch = useDispatch();\r\n  const error = useSelector((state) => state.errorReducer);\r\n  const [err, setError] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  useEffect(() => {\r\n    if (error.message) {\r\n      setError(error.message);\r\n      setCode(error.code);\r\n    }\r\n  }, [error]);\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(actions.fetchCenters());\r\n    } catch (e) {\r\n      console.log(\"errroooor\");\r\n    }\r\n    //console.log(\"center state : \", centers);\r\n  }, [dispatch]);\r\n  const handleUpdate = (center) => {\r\n    dispatch(actions.setSelectedCenter(center));\r\n    dispatch(actions.setDisplayUpdate(true));\r\n  };\r\n  const handleDelete = (name) => {\r\n    dispatch(actions.deleteCenter(name));\r\n  };\r\n\r\n  const handleAssign = (center) => {\r\n    dispatch(actions.setSelectedCenter(center));\r\n    dispatch(actions.setDisplayUpdateVac(true));\r\n  };\r\n  const clearError = () => {\r\n    dispatch({\r\n      type: types.CLEAR_ERRORS,\r\n    });\r\n    setError(\"\");\r\n    setCode(\"\");\r\n  };\r\n  const popUp = (type) => {\r\n    notification[type]({\r\n      message: code,\r\n      description: err,\r\n      onClose: clearError,\r\n    });\r\n  };\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <SideBar />\r\n      <Layout className=\"site-layout\">\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => dispatch(actions.setDisplayed(true))}\r\n            >\r\n              Add new center\r\n            </Button>\r\n            {err && popUp(\"error\")}\r\n            {isAddVisible && <AddCenter />}\r\n            {isUpdateVisible && <UpdateCenter />}\r\n            {isUpdateVacVisible && <AssignVaccine />}\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Governorate</TableCell>\r\n                  <TableCell>City</TableCell>\r\n                  <TableCell>Capacity</TableCell>\r\n                  <TableCell>Vaccine Type</TableCell>\r\n                  <TableCell>Vaccine Stock</TableCell>\r\n                  <TableCell>Update</TableCell>\r\n                  <TableCell>Assign Vaccine</TableCell>\r\n                  <TableCell>Delete</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              {centers.loading && <div>Loading ... </div>}\r\n              <TableBody>\r\n                {!centers.loading &&\r\n                  centers.list &&\r\n                  centers.list.map((center, index) => (\r\n                    <StyledTableRow key={index}>\r\n                      <StyledTableCell> {center.name}</StyledTableCell>\r\n                      <StyledTableCell> {center.governorate}</StyledTableCell>\r\n                      <StyledTableCell> {center.city}</StyledTableCell>\r\n                      <StyledTableCell>\r\n                        {center.center_capacity}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        {center.type_vaccine\r\n                          ? center.type_vaccine.vaccine_type\r\n                          : \"Not assigned\"}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        {center.type_vaccine\r\n                          ? center.number_vaccine\r\n                          : \"Not assigned\"}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        <Button onClick={() => handleUpdate(center)}>\r\n                          Update{\" \"}\r\n                        </Button>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        <Button onClick={() => handleAssign(center)}>\r\n                          Assign{\" \"}\r\n                        </Button>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        <IconButton onClick={() => handleDelete(center.name)}>\r\n                          <DeleteIcon className=\"btnColorDelete\" />\r\n                        </IconButton>\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </Content>\r\n      </Layout>{\" \"}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ManageCenter;\r\n","import Axios from \"axios\";\r\n\r\nlet baseUrl = \"http://localhost:5000/api/openday\";\r\n\r\nexport const AddOpenDay = async (od) => {\r\n  const result = await Axios.post(baseUrl + \"/add\", od);\r\n\r\n  return result.data.newOpenDay;\r\n};\r\n\r\n\r\nexport const fetchCenterById = async (id) => {\r\n  const result = await Axios.get(baseUrl  + id);\r\n\r\n  return result.data.openDay;\r\n};\r\n\r\n\r\nexport const updateOpenDay = async (od) => {\r\n  const result = await Axios.put(baseUrl + \"/update\", od);\r\n  return result.data.updatedOpenDay;\r\n};\r\n\r\n\r\nexport const fetchOpenDay = async () => {\r\n\r\n  const result = await Axios.get(baseUrl + \"/all\");\r\n  return result.data.openDays;\r\n};\r\n","import * as types from \"../../../redux/types\";\r\nimport * as api from \"../../../services/openday.service\";\r\n\r\n\r\n\r\nexport const AddOpenDay = (openday) => async (dispatch) => {\r\n  try {\r\n    const newOpenDay = await api.AddOpenDay(openday);\r\n    dispatch({\r\n      type: types.ADD_OPEN_DAY,\r\n      openDay: newOpenDay,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\n\r\nexport const fetchOpenDays = () => async (dispatch) => {\r\n  \r\n  const list = await api.fetchOpenDay();\r\n  dispatch({\r\n    type: types.GET_ALL_OPEN_DAYS,\r\n    OpenDays: list,\r\n  });\r\n};\r\n\r\nexport const setSelectedOpenDay = (openday) => ({\r\n  type: types.SET_SELECTED_OPEN_DAY,\r\n  openday,\r\n});\r\n\r\nexport const setDisplayed = (value) => ({\r\n  type: types.SET_DISPLAYED_OPEN_DAY,\r\n  value,\r\n});\r\n\r\nexport const setDisplayUpdate = (value) => ({\r\n  type: types.SET_DISPLAY_UPDATE_OPEN_DAY,\r\n  value,\r\n});\r\n\r\nexport const updateOpenDay = (openday) => async (dispatch) => {\r\n  try {\r\n    const updatedOpenDay = await api.updateOpenDay(openday);\r\n    dispatch({\r\n      type: types.UPDATE_OPEN_DAY,\r\n      openDay: updatedOpenDay,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button, InputNumber,Form, Select, TimePicker, DatePicker  } from \"antd\"; \r\nimport { Row, Col } from \"antd\";\r\nimport moment from 'moment';\r\nimport * as actions from \"../../../redux/actions/openDays\";\r\n\r\n\r\nfunction AddOpenDay() {\r\n  const isModalVisible = useSelector((state) => state.openDays.displayed);   \r\n  const centers =  useSelector((state) => state.centers.list);\r\n  const vaccines =  useSelector((state) => state.vaccines.list);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const closeModal = () => {\r\n    dispatch(actions.setDisplayed(false));\r\n  };\r\n  \r\n\r\n\r\n  const handleSubmit = async (values) => { \r\n    const openday = {\r\n      center:values.centers,\r\n      endAge: values.endAge,\r\n      startAge: values.startAge,\r\n      appointmentTime: moment(values.opening).format(\"HH:mm\"),\r\n      vaccine_type:values.vaccine_type,\r\n      date: values.date\r\n    };\r\n   dispatch(actions.AddOpenDay(openday));\r\n   dispatch(actions.setDisplayed(false));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Add new open day\"\r\n      visible={isModalVisible}\r\n      onCancel={closeModal}\r\n      footer={null}\r\n    >\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        onFinish={handleSubmit} \r\n      >\r\n         <Form.Item\r\n          label=\"centers list\"\r\n          name=\"centers\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n           <Select >\r\n            <Select.Option>--Choose center --</Select.Option>\r\n            {centers?.map((center, key) => {\r\n              return (\r\n                <Select.Option key={key} value={center._id}>\r\n                  {center.name}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"date\"\r\n          label=\"Date:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"opening time\"\r\n          name=\"opening\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n  <TimePicker  />\r\n        </Form.Item>\r\n        <Row>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              name={\"startAge\"}\r\n              label=\"FROM\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  type: 'number',\r\n                  min:1\r\n                }\r\n              ]}\r\n            >\r\n              <InputNumber />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item name={\"endAge\"} label=\"To\">\r\n              <InputNumber />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Form.Item\r\n          label=\"vaccin type\"\r\n          name=\"vaccine_type\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select >\r\n            <Select.Option>--Choose vaccin type--</Select.Option>\r\n            {vaccines?.map((gov, key) => {\r\n              return (\r\n                <Select.Option key={key} value={gov._id}>\r\n                  {gov.vaccine_type}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" shape=\"round\"> Add Open Day </Button>\r\n         \r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\nexport default AddOpenDay;\r\n","import React, { useEffect } from \"react\";\r\nimport { Layout, Button } from \"antd\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/openDays\";\r\nimport {fetchCenters} from \"../../redux/actions/centers\";\r\nimport {fetchVaccines} from \"../../redux/actions/vaccines\";\r\nimport UpdateOpenDay from \"./UpdateOpenDay/UpdateOpenDay\";\r\nimport SideBar from \"../../SideBar/SideBar\";\r\nimport AddOpenDay from \"./AddOpenDay/AddOpenDay\";\r\nimport moment from 'moment';\r\n\r\n\r\nconst { Content } = Layout;\r\n// const style = {\r\n//   position: \"absolute\",\r\n//   top: \"50%\",\r\n//   left: \"50%\",\r\n//   transform: \"translate(-50%, -50%)\",\r\n//   // width: 400,\r\n//   bgcolor: \"background.paper\",\r\n//   border: \"2px solid #000\",\r\n//   boxShadow: 24,\r\n//   p: 4,\r\n// };\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#DDD\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    padding: \"7px 8px !important\",\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction ManageOpenDay() {\r\n  const isAddVisible = useSelector((state) => state.openDays.displayed);\r\n  const isUpdateVisible = useSelector((state) => state.openDays.displayUpdate);\r\n  const openDays = useSelector((state) => state.openDays);\r\n  const centers =  useSelector((state) => state.centers.list);\r\n  const vaccines =  useSelector((state) => state.vaccines.list);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(actions.fetchOpenDays());\r\n      dispatch(fetchCenters());\r\n      dispatch(fetchVaccines());\r\n    } catch (e) {\r\n      console.log(\"errroooor\");\r\n    }\r\n  }, [dispatch]);\r\n  const handleUpdate = (openday) => {\r\n   dispatch(actions.setSelectedOpenDay(openday));\r\n   dispatch(actions.setDisplayUpdate(true));\r\n  };\r\n  const handleDelete = (name) => {\r\n   // dispatch(actions.deleteCenter(name));\r\n  };\r\n\r\n  const handleAssign = (openday) => {\r\n    dispatch(actions.setSelectedOpenDay(openday));\r\n   // dispatch(actions.setDisplayUpdateVac(true));\r\n  };\r\n  \r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <SideBar />\r\n      <Layout className=\"site-layout\">\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => dispatch(actions.setDisplayed(true))}\r\n            >\r\n              Add new Open Day\r\n            </Button>\r\n\r\n            {isAddVisible && <AddOpenDay />}\r\n            {isUpdateVisible && <UpdateOpenDay />}\r\n            \r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Centre</TableCell>\r\n                  <TableCell>date</TableCell>\r\n                  <TableCell>Time</TableCell>\r\n                  <TableCell>volunteers</TableCell>\r\n                  <TableCell>users invited</TableCell>\r\n                  <TableCell>users age</TableCell>\r\n                  <TableCell>Vaccine type</TableCell>\r\n                  <TableCell>status</TableCell>\r\n                  <TableCell>vaccinated</TableCell>\r\n                  <TableCell>Update</TableCell>\r\n                  <TableCell>Assign volunteers</TableCell>\r\n                  <TableCell>Delete</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              {openDays.loading && <div>Loading ... </div>}\r\n              <TableBody>\r\n                {!openDays.loading &&\r\n                  openDays.list &&\r\n                  openDays.list.map((openday, index) => (\r\n                    <StyledTableRow key={index}>\r\n                      <StyledTableCell> {centers.find(center => center._id === openday.center)?.name}</StyledTableCell>\r\n                      <StyledTableCell> {openday?.date ? moment(openday.date).format(\"DD-MM-YYYY\") : \"unkown\"}</StyledTableCell>\r\n                      <StyledTableCell> {openday?.appointmentTime ?openday?.appointmentTime: '08:00' }</StyledTableCell>\r\n                      <StyledTableCell>\r\n                        {openday?.volunteersList.length}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                      {openday?.users.length}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                      {'[' + openday?.startAge +'ans , ' + openday?.endAge +'ans]'}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        {openday?.vaccine_type\r\n                          ? vaccines.find(center => center._id === openday.vaccine_type)?.vaccine_type\r\n                          : \"Not assigned\"}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                      {openday?.status ? 'ended' : 'Availibale'}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                      {0 +'%'}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        <Button onClick={() => handleUpdate(openday)}>\r\n                          Update{\" \"}\r\n                        </Button>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        <Button onClick={() => handleAssign(openday)}>\r\n                          Assign{\" \"}\r\n                        </Button>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        <IconButton onClick={() => handleDelete(openday.name)}>\r\n                          <DeleteIcon className=\"btnColorDelete\" />\r\n                        </IconButton>\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </Content>\r\n      </Layout>{\" \"}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ManageOpenDay;\r\n","import Axios from \"axios\"\r\n\r\nlet baseUrl = \"http://localhost:5000/api/pharmacies\" ;\r\n\r\nexport const addPharmacy = async (pharmacy) => {\r\n  console.log(pharmacy)\r\n  const result = await Axios.post(\r\n    baseUrl + \"/add\",\r\n    pharmacy\r\n  )\r\n  return result.data.newPharmacy\r\n}\r\n\r\nexport const updatePharmacy = async (pharmacy) => {\r\n  const result = await Axios.put(\r\n    baseUrl + \"/update\" ,\r\n    pharmacy\r\n  )\r\n  return result.data.updatedPharmacy\r\n}\r\n\r\nexport const deletePharmacy = async (name) => {\r\n  const result = await Axios.delete(\r\n    baseUrl + \"/delete/\" + name\r\n  )\r\n  return result.data\r\n}\r\n\r\nexport const fetchPharmacyByName = async (name) => {\r\n  const result = await Axios.get(\r\n    baseUrl + \"/name/\" + name\r\n  )\r\n  return result.data.pharmacy\r\n}\r\n\r\nexport const fetchPharmacies = async () => {\r\n  // await delay(500)\r\n  const result = await Axios.get(\r\n    baseUrl + \"/all\"\r\n  ) \r\n  return result.data.pharmacies\r\n}\r\n","import * as types from \"../../types\"\r\nimport * as api from \"../../../services/pharmacies.service\"\r\nexport const setSelectedPharmacy = (pharmacy) => ({\r\n  type: types.SET_SELECTED_PHARMACY,\r\n  pharmacy\r\n})\r\n\r\nexport const setDisplayed = (value) => ({\r\n  type: types.SET_DISPLAYED_PHARMACY,\r\n  value\r\n})\r\n\r\nexport const setDisplayUpdate = (value) => ({\r\n  type: types.SET_DISPLAY_UPDATE,\r\n  value\r\n})\r\n\r\nexport const fetchPharmacies = () => async (dispatch) => {\r\n   dispatch({\r\n     type: types.FETCH_PHARMACIES_REQUEST,\r\n     \r\n   })\r\n   \r\n      try {\r\n        // const pharmacys =  \r\n\r\n         dispatch({\r\n           type: types.FETCH_PHARMACIES_SUCCESS,\r\n           list: await api.fetchPharmacies(),\r\n         })\r\n        // console.log(pharmacys)\r\n      } catch (e) {\r\n       dispatch({\r\n         type: types.FETCH_PHARMACIES_FAILURE,\r\n       })\r\n      }\r\n}\r\n\r\nexport const fetchPharmacyByName = (id) => async (dispatch) => {\r\n  const pharmacy = await api.fetchPharmacyByName(id)\r\n  dispatch ( {\r\n    type: types.FETCH_PHARMACY_BY_ID,\r\n    pharmacy,\r\n  })\r\n}\r\n\r\nexport const addPharmacy = (pharmacy) => async (dispatch) => {\r\n  const newPharmacy = await api.addPharmacy(pharmacy)\r\n  console.log(newPharmacy)\r\n  newPharmacy? \r\n  dispatch({\r\n    type: types.ADD_PHARMACY,\r\n    pharmacy: newPharmacy,\r\n  }) : console.log(\"Error \")\r\n}\r\n\r\nexport const updatePharmacy = (pharmacy) => async (dispatch) => {\r\n  try{\r\n  const updatedPharmacy = await api.updatePharmacy(pharmacy) \r\n  dispatch ( {\r\n    type: types.UPDATE_PHARMACY,\r\n    pharmacy: updatedPharmacy,\r\n  })\r\n  }catch(e){\r\n    console.log(e)\r\n  }\r\n  \r\n}\r\nexport const deletePharmacy = (name) => async (dispatch) => {\r\n  await api.deletePharmacy(name)\r\n  dispatch ( {\r\n    type: types.DELETE_PHARMACY,\r\n    pharmacy: name\r\n  })\r\n}\r\n\r\n\r\n\r\n","import React, { useState} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\" \r\nimport { Modal, Button, Form, Input, Select, InputNumber} from \"antd\"; \r\n\r\nimport * as actions from '../../../redux/actions/pharmacies' \r\nimport gouvernorat from '../../../constants/gouvernorat'\r\nimport villes from '../../../constants/villes'\r\n\r\nfunction UpdatePharmacy() {\r\n  const isModalVisible = useSelector((state) => state.pharmacies.displayUpdate) \r\n  const pharmacy = useSelector((state) => state.pharmacies.selectedPharmacy) \r\n  const [cities,setCities] = useState([]) \r\n  const dispatch = useDispatch() \r\n  const closeModal = () => {\r\n    dispatch(actions.setDisplayUpdate(false))  \r\n  };\r\n  const changeGov = (gover) => { \r\n    const found = villes.find((ville) => ville.gov === gover).cities;\r\n    setCities(found ? found : []);\r\n  };\r\n  const handleSubmit = async (values) =>{\r\n    const Updatedpharmacy ={\r\n      id:pharmacy._id,\r\n      name:values.name,\r\n      governorate: values.governorate,\r\n      city: values.city,\r\n      pharmacy_capacity: values.capacity,\r\n      number_vaccine: 0,\r\n    } \r\n    dispatch(actions.updatePharmacy(Updatedpharmacy)) \r\n  }\r\n   \r\n\r\n  return ( \r\n     <Modal \r\n        title=\"Update new pharmacy\" \r\n        visible={isModalVisible}  \r\n        onCancel={closeModal}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          name=\"control-ref\"\r\n          labelCol={{ span: 6 }}\r\n          wrapperCol={{ span: 14 }}\r\n          layout=\"horizontal\"\r\n          onFinish={handleSubmit} \r\n        initialValues={{\r\n          \"name\": pharmacy.name,\r\n          \"governorate\": pharmacy.governorate,\r\n          \"city\": pharmacy.city,\r\n          \"capacity\": pharmacy.pharmacy_capacity,\r\n        }}\r\n        >\r\n          <Form.Item\r\n            label=\"pharmacy_name:\"\r\n            name=\"name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"gouvernorat\"\r\n            name=\"governorate\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Select onChange={changeGov}>\r\n              <Select.Option>--Choose Governorate--</Select.Option>\r\n              {gouvernorat?.map((gov, key) => {\r\n                return <Select.Option key={key} value={gov} >{gov}</Select.Option>\r\n              })}\r\n              </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"city\"\r\n            name=\"city\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Select>\r\n            <Select.Option>--Choose City--</Select.Option>\r\n            {cities?.map((city, key) => {\r\n              return <Select.Option key={key} value={city}>{city}</Select.Option>\r\n            })}\r\n            </Select>\r\n          </Form.Item>\r\n             \r\n           \r\n          <Form.Item\r\n            label=\"pharmacy_capacity:\"\r\n            name=\"capacity\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                type: 'number',\r\n                min: 0,\r\n              },\r\n            ]}\r\n          >\r\n           <InputNumber />\r\n          </Form.Item>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" shape=\"round\"> Update pharmacy </Button>\r\n        </Form>\r\n      </Modal>\r\n     \r\n  );\r\n}\r\nexport default UpdatePharmacy;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button, InputNumber,Form, Input, Select } from \"antd\";\r\n\r\nimport * as actions from \"../../../redux/actions/pharmacies\";\r\nimport gouvernorat from \"../../../constants/gouvernorat\";\r\nimport villes from \"../../../constants/villes\";\r\n\r\nfunction AddPharmacy() {\r\n  const isModalVisible = useSelector((state) => state.pharmacies.displayed);\r\n  const [cities, setCities] = useState([]); \r\n  const dispatch = useDispatch();\r\n  const closeModal = () => {\r\n    dispatch(actions.setDisplayed(false));\r\n  }; \r\n\r\n  const changeGov = (gover) => { \r\n    const found = villes.find((ville) => ville.gov === gover).cities;\r\n    setCities(found ? found : []);\r\n  };\r\n \r\n  const handleSubmit = async (values) => {\r\n    const pharmacy = {\r\n      name:values.name,\r\n      governorate: values.governorate,\r\n      city: values.city,\r\n      pharmacy_capacity: values.capacity,\r\n      number_vaccine: 0,\r\n    };\r\n    dispatch(actions.addPharmacy(pharmacy));\r\n  };\r\n  return (\r\n    <Modal\r\n      title=\"Add new pharmacy\"\r\n      visible={isModalVisible}\r\n      onCancel={closeModal}\r\n      footer={null}\r\n    >\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        onFinish={handleSubmit} \r\n      >\r\n        <Form.Item\r\n          label=\"pharmacy_name:\"\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"gouvernorat\"\r\n          name=\"governorate\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select onChange={changeGov}>\r\n            <Select.Option>--Choose Governorate--</Select.Option>\r\n            {gouvernorat?.map((gov, key) => {\r\n              return (\r\n                <Select.Option key={key} value={gov}>\r\n                  {gov}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"city\"\r\n          name=\"city\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select>\r\n            <Select.Option>--Choose City--</Select.Option>\r\n            {cities?.map((city, key) => {\r\n              return (\r\n                <Select.Option key={key} value={city}>\r\n                  {city}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"pharmacy_capacity:\"\r\n          name=\"capacity\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: 'number',\r\n              min: 0\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber/>\r\n        </Form.Item>\r\n\r\n        <Button type=\"primary\" htmlType=\"submit\" shape=\"round\"> Add pharmacy </Button>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\nexport default AddPharmacy;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Layout, Button } from \"antd\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"; \r\nimport {IconButton,Table,TableBody,TableCell,TableHead,TableRow,withStyles} from \"@material-ui/core\";    \r\n\r\n\r\nimport * as actions from '../../redux/actions/pharmacies'  \r\nimport UpdatePharmacy from \"./UpdatePharmacy/UpdatePharmacy\";\r\nimport AddPharmacy from \"./AddPharmacy/AddPharmacy\";\r\nimport SideBar from \"../../SideBar/SideBar\";\r\n\r\nconst { Content } = Layout;\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#DDD\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    padding: \"7px 8px !important\",\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction ManagePharmacy() {\r\n  const isAddVisible = useSelector((state) => state.pharmacies.displayed) \r\n  const isUpdateVisible = useSelector((state) => state.pharmacies.displayUpdate) \r\n  const pharmacies = useSelector((state) => state.pharmacies)    \r\n  const dispatch = useDispatch() \r\n  \r\n  useEffect(() => {\r\n    try {\r\n      dispatch(actions.fetchPharmacies()) \r\n    } catch (e) {\r\n      console.log('errroooor')\r\n    }  \r\n    //console.log('pharmacy state : ', pharmacies)\r\n    \r\n  }, [dispatch])\r\n  const handleUpdate = (pharmacy) =>{\r\n    dispatch(actions.setSelectedPharmacy(pharmacy)) \r\n    dispatch(actions.setDisplayUpdate(true)) \r\n  }\r\n  const handleDelete =  (name) => {\r\n    dispatch(actions.deletePharmacy(name))\r\n\r\n  }\r\n  return ( \r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <SideBar />\r\n        <Layout className=\"site-layout\">\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            <div\r\n              className=\"site-layout-background\"\r\n              style={{ padding: 24, minHeight: 360 }}\r\n            >\r\n             <Button type=\"primary\" onClick={()=>dispatch(actions.setDisplayed(true)) }>\r\n              Add new pharmacy\r\n            </Button>\r\n             { isAddVisible && <AddPharmacy /> }\r\n             { isUpdateVisible && <UpdatePharmacy /> }\r\n              <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow> \r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Governorate</TableCell>\r\n                    <TableCell>City</TableCell>\r\n                    <TableCell>Capacity</TableCell>\r\n                    <TableCell>Vac-Type</TableCell>\r\n                    <TableCell>Vac-Stock</TableCell>\r\n                    <TableCell>Update</TableCell>\r\n                    <TableCell>Delete</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                {pharmacies.loading && <div>Loading ... </div>}\r\n                <TableBody>\r\n                {!pharmacies.loading && pharmacies.list && pharmacies.list.map((pharmacy, index) =>   \r\n                  <StyledTableRow key={index}> \r\n                    <StyledTableCell> {pharmacy.name}</StyledTableCell>\r\n                    <StyledTableCell> {pharmacy.governorate}</StyledTableCell>\r\n                    <StyledTableCell> {pharmacy.city}</StyledTableCell>\r\n                    <StyledTableCell> {pharmacy.pharmacy_capacity}</StyledTableCell>\r\n                    <StyledTableCell> {pharmacy.type_vaccine ? pharmacy.type_vaccine : \"Not yet\"}</StyledTableCell>\r\n                    <StyledTableCell> {pharmacy.number_vaccine}</StyledTableCell>\r\n                    <StyledTableCell>\r\n                      <Button onClick={()=>handleUpdate(pharmacy)}>Update </Button>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell> \r\n                      <IconButton onClick={()=> handleDelete(pharmacy.name)}>\r\n                        <DeleteIcon className=\"btnColorDelete\" />\r\n                      </IconButton>\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>)\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          </Content>\r\n        </Layout>{\" \"}\r\n      </Layout> \r\n  );\r\n}\r\n\r\nexport default ManagePharmacy;\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Input, Button, Select } from \"antd\";\r\n\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./inscriptionPharmacie.css\";\r\n\r\nfunction inscriptionPharmacie() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 4 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        className=\"inscriP\"\r\n      >\r\n        <Form.Item\r\n          name=\"CIN\"\r\n          label=\"CIN:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Province\"\r\n          name=\"Province\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select>\r\n            <Select.Option value=\"Tunis\">Tunis</Select.Option>\r\n            <Select.Option value=\"Tunis\">Manouba</Select.Option>\r\n            <Select.Option value=\"Tunis\">Ben Arous</Select.Option>\r\n            <Select.Option value=\"Tunis\">Marsa</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Pharmacie\"\r\n          name=\"Pharmacie\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select>\r\n            <Select.Option value=\"\"></Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <div className=\"buttonS\">\r\n          <Button type=\"primary\" htmlType=\"submit\" shape=\"round\">\r\n            Confirmer\r\n          </Button>\r\n          <Button type=\"danger\" htmlType=\"submit\" shape=\"round\">\r\n            <Link to=\"/inscriptionCenter\">S'inscrire</Link>\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\nexport default inscriptionPharmacie;\r\n","import React from \"react\";\r\n\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport \"./updateInscri.css\";\r\n\r\nfunction UpdateInscri() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 4 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        className=\"update\"\r\n      >\r\n        <p className=\"para\">Mettez à jour votre inscription à EVAX</p>\r\n        <Form.Item\r\n          name=\"code\"\r\n          label=\"Num Inscription:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Email:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Button type=\"primary\" className=\"bt\" htmlType=\"submit\" shape=\"round\">\r\n          Mettre à jour\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateInscri;\r\n","import Axios from \"axios\";\r\n\r\nlet baseUrl = \"http://localhost:5000/api/appoint\" ;\r\n\r\nexport const updateRDV = async (appointId,appoint) => {\r\n  try {\r\n    const result = await Axios.put(\r\n      baseUrl + `/update-appoint/${appointId}`,\r\n      appoint\r\n    )\r\n    return result.data;\r\n\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n} \r\n","import * as types from \"../../../redux/types\";\r\nimport * as api from \"../../../services/RDV.service.js\";\r\n\r\nexport const updateRDV = (appointId,appoint) => async (dispatch) => {\r\n  try {\r\n    await api.updateRDV(appointId,appoint);\r\n    dispatch({\r\n      type: types.UPDATE_RDV,\r\n      updatedRDV: appoint,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport { Form, Input, Button, DatePicker } from \"antd\";\r\nimport \"./reportRdv.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../redux/actions/RDV/RDV.js\";\r\n\r\nconst ReportRdv = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const reportRdv = (values) => {\r\n    console.log(\"values\", values);\r\n\r\n    const { updateRDV } = actions;\r\n\r\n    // first param take appointment id\r\n    dispatch(updateRDV(\"1\", values));\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <Form\r\n        onFinish={reportRdv}\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 4 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        className=\"report\"\r\n      >\r\n        <p className=\"pa\">Reportez votre rendez-vous</p>\r\n        <Form.Item\r\n          name=\"CIN\"\r\n          label=\"CIN:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"Num Inscription:\"\r\n          label=\"Num Inscription:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"appointmentDate\"\r\n          label=\"Nouvelle date:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker />\r\n        </Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" className=\"bt\">\r\n          Reporter\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportRdv;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button, Form, Input,InputNumber} from \"antd\"; \r\n\r\nimport * as actions from \"../../../redux/actions/vaccines\";\r\n\r\nfunction UpdateVaccine() {\r\n  const isModalVisible = useSelector((state) => state.vaccines.displayUpdate);\r\n  const vaccine = useSelector((state) => state.vaccines.selectedVaccine);\r\n\r\n  const dispatch = useDispatch();\r\n  const closeModal = () => {\r\n    dispatch(actions.setDisplayUpdate(false));\r\n  }; \r\n\r\n  const handleSubmit = async (values) => {\r\n    const Updatedvaccine = {\r\n      id: vaccine._id,\r\n      stock: values.stock,\r\n    };\r\n    dispatch(actions.updateVaccine(Updatedvaccine));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Update new vaccine\"\r\n      visible={isModalVisible} \r\n      footer={null}\r\n      onCancel={closeModal}\r\n    >\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        onFinish={handleSubmit} \r\n        initialValues={{\r\n          \"stock\": vaccine.stock,\r\n          \"vaccine_type\": vaccine.vaccine_type,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          label=\"Vaccine name:\"\r\n          name=\"vaccine_type\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Vaccine stock:\"\r\n          name=\"stock\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Button htmlType=\"submit\" > Update center </Button>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default UpdateVaccine;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button, Form, Input, InputNumber} from \"antd\"; \r\n\r\nimport * as actions from \"../../../redux/actions/vaccines\";\r\n\r\nfunction AddVaccine() {\r\n  const isModalVisible = useSelector((state) => state.vaccines.displayed);\r\n\r\n  const dispatch = useDispatch();\r\n  const closeModal = () => {\r\n    dispatch(actions.setDisplayed(false));\r\n  }; \r\n\r\n  const handleSubmit = async (values) => {\r\n    const vaccine = {\r\n      vaccine_type:values.vaccine_type,\r\n      stock:values.stock,\r\n    };\r\n    dispatch(actions.addVaccine(vaccine));\r\n  };\r\n  return (\r\n    <Modal\r\n      title=\"Add new vaccine\"\r\n      visible={isModalVisible}\r\n      onCancel={closeModal}\r\n      footer={null}\r\n    >\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        onFinish={handleSubmit} \r\n      >\r\n        <Form.Item\r\n          label=\"Vaccine Name:\"\r\n          name=\"vaccine_type\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Stock:\"\r\n          name=\"stock\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: 'number',\r\n              min: 0,\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Button type=\"primary\" htmlType=\"submit\" shape=\"round\"> Add Vaccine </Button>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddVaccine;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Layout, Button, notification } from \"antd\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as types from \"../../redux/types\";\r\nimport * as actions from \"../../redux/actions/vaccines\";\r\nimport UpdateVaccine from \"./UpdateVaccine/UpdateVaccine\";\r\nimport SideBar from \"../../SideBar/SideBar\";\r\nimport AddVaccine from \"./AddVaccine/AddVaccine\";\r\nconst { Content } = Layout;\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#DDD\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    padding: \"7px 8px !important\",\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction ManageVaccine() {\r\n  const isAddVisible = useSelector((state) => state.vaccines.displayed);\r\n  const isUpdateVisible = useSelector((state) => state.vaccines.displayUpdate);\r\n  const vaccines = useSelector((state) => state.vaccines);\r\n  const dispatch = useDispatch();\r\n  const error = useSelector((state) => state.errorReducer);\r\n  const [err, setError] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  useEffect(() => {\r\n    if (error.message) {\r\n      setError(error.message);\r\n      setCode(error.code);\r\n    }\r\n  }, [error]);\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(actions.fetchVaccines());\r\n    } catch (e) {\r\n      console.log(\"errroooor\");\r\n    }\r\n    //console.log(\"vaccine state : \", vaccines);\r\n  }, [dispatch]);\r\n  const handleUpdate = (vaccine) => {\r\n    dispatch(actions.setSelectedVaccine(vaccine));\r\n    dispatch(actions.setDisplayUpdate(true));\r\n  };\r\n  const handleDelete = (vaccine_type) => {\r\n    dispatch(actions.deleteVaccine(vaccine_type));\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({\r\n      type: types.CLEAR_ERRORS,\r\n    });\r\n    setError(\"\");\r\n    setCode(\"\");\r\n  };\r\n  const popUp = (type) => {\r\n    notification[type]({\r\n      message: code,\r\n      description: err,\r\n      onClose: clearError,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <SideBar />\r\n      <Layout className=\"site-layout\">\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => dispatch(actions.setDisplayed(true))}\r\n            >\r\n              Add new vaccine\r\n            </Button>\r\n            {err && popUp(\"error\")}\r\n            {isAddVisible && <AddVaccine />}\r\n            {isUpdateVisible && <UpdateVaccine />}\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Stock</TableCell>\r\n                  <TableCell>Update</TableCell>\r\n                  <TableCell>Delete</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              {vaccines.loading && <div>Loading ... </div>}\r\n              <TableBody>\r\n                {!vaccines.loading &&\r\n                  vaccines.list &&\r\n                  vaccines.list.map((vaccine, index) => (\r\n                    <StyledTableRow key={index}>\r\n                      <StyledTableCell> {vaccine.vaccine_type}</StyledTableCell>\r\n                      <StyledTableCell> {vaccine.stock}</StyledTableCell>\r\n                      <StyledTableCell>\r\n                        <Button onClick={() => handleUpdate(vaccine)}>\r\n                          Update{\" \"}\r\n                        </Button>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        <IconButton\r\n                          onClick={() => handleDelete(vaccine.vaccine_type)}\r\n                        >\r\n                          <DeleteIcon className=\"btnColorDelete\" />\r\n                        </IconButton>\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </Content>\r\n      </Layout>{\" \"}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ManageVaccine;\r\n","import Axios from \"axios\";\r\n\r\nlet baseUrl = \"http://localhost:5000/api/auth\";\r\nlet userUrl = \"http://localhost:5000/api/users/\";\r\n\r\nexport const registerCenter = async (user) => {\r\n  try {\r\n    const result = await Axios.post(baseUrl + \"/register\", user);\r\n    localStorage.setItem(\"token\", result.data.token);\r\n    return result.data.user;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const addUser = async (user) => {\r\n  try {\r\n    const result = await Axios.post(userUrl, user);\r\n\r\n    return result.data.user;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const updateUser = async (user) => {\r\n  const result = await Axios.put(userUrl + user.id, user);\r\n  return result.data.updatedUser;\r\n};\r\n\r\nexport const deleteUser = async (id) => {\r\n  const result = await Axios.delete(userUrl + id);\r\n  return result.data.user;\r\n};\r\n\r\nexport const getAllUsers = async () => {\r\n  const result = await Axios.get(userUrl);\r\n  return result.data.users;\r\n};\r\n\r\nexport const getUserByCin = async () => {\r\n  const result = await Axios.get(userUrl + \"/cin\");\r\n  return result.data.user;\r\n};\r\n","import * as types from \"../../../redux/types\";\r\nimport * as api from \"../../../services/users.service\";\r\n\r\nexport const registerCenter = (user) => async (dispatch) => {\r\n  try {\r\n    const newUser = await api.registerCenter(user);\r\n    dispatch({\r\n      type: types.REGISTER_CENTER,\r\n      user: newUser,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: types.SET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addUser = (user) => async (dispatch) => {\r\n  try {\r\n    const newUser = await api.addUser(user);\r\n    console.log(newUser); //a testé demain\r\n    dispatch({\r\n      type: types.ADD_USER,\r\n      user: newUser,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\n// export const updateUser = (user) => async (dispatch) => {\r\n//   try {\r\n//     const updatedUser = await api.updateUser(user);\r\n//     dispatch({\r\n//       type: types.UPDATE_USER,\r\n//       user: updatedUser,\r\n//     });\r\n//   } catch (e) {\r\n//     console.log(e);\r\n//   }\r\n// };\r\n\r\n// export const deleteUser = (id) => async (dispatch) => {\r\n//   await api.deleteUser(id);\r\n//   dispatch({\r\n//     type: types.DELETE_USER,\r\n//     user: id,\r\n//   });\r\n// };\r\n\r\nexport const getAllUsers = () => async (dispatch) => {\r\n  const list = await api.getAllUsers();\r\n  dispatch({\r\n    type: types.GET_ALL_USER,\r\n    user: list,\r\n  });\r\n};\r\n\r\nexport const getUserByCin = () => async (dispatch) => {\r\n  try {\r\n    const user = await api.getUserByCin();\r\n    dispatch({\r\n      type: types.GET_USER_BY_CIN,\r\n      user: user,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const setSelectedUser = (user) => ({\r\n  type: types.SET_SELECTED_USER,\r\n  user,\r\n});\r\n\r\nexport const setDisplayed = (value) => ({\r\n  type: types.SET_DISPLAYED_USER,\r\n  value,\r\n});\r\n\r\nexport const setDisplayUpdate = (value) => ({\r\n  type: types.SET_DISPLAY_UPDATE_USER,\r\n  value,\r\n});\r\n\r\nexport const updateUser = (user) => async (dispatch) => {\r\n  try {\r\n    const updatedUser = await api.updateUser(user);\r\n    dispatch({\r\n      type: types.UPDATE_USER,\r\n      user: updatedUser,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n  await api.deleteUser(id);\r\n  dispatch({\r\n    type: types.DELETE_USER,\r\n    user: id,\r\n  });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button, Form, Input, InputNumber,Select,DatePicker, AutoComplete} from \"antd\"; \r\nimport {fetchCenters} from \"../../../redux/actions/centers\";\r\nimport * as actions from \"../../../redux/actions/users\";\r\nimport gouvernorat from \"../../../constants/gouvernorat\";\r\nimport villes from \"../../../constants/villes\";\r\nfunction AddVolunteers() {\r\n  const isModalVisible = useSelector((state) => state.users.displayed);\r\n  const [cities, setCities] = useState([]);    \r\n  const centers =  useSelector((state) => state.centers.list);\r\n  const dispatch = useDispatch();\r\n   \r\n  const changeGov = (gover) => { \r\n    const found = villes.find((ville) => ville.gov === gover).cities;\r\n    setCities(found ? found : []);\r\n  };\r\n  const closeModal = () => { \r\n    dispatch(actions.setDisplayed(false));\r\n  }; \r\n  const handleSubmit = async (values) => {\r\n\r\n    console.log('values', values)\r\n    const user = {\r\n      ...values,\r\n      user_type:values.user_type,\r\n      stock:values.stock,\r\n    };\r\n    dispatch(actions.addUser( {...user,role:\"volunteer\"}));\r\n  };\r\n  const options = centers.map(opt => (\r\n    <Select.Option key={opt._id} value={opt.name} label={opt.name}>\r\n      {opt.name}\r\n    </Select.Option>\r\n)).concat([\r\n<Select.Option disabled key=\"all\" className=\"show-all\">\r\n Show Plus\r\n</Select.Option>,\r\n]);\r\n   useEffect(() => {\r\n    try {\r\n      dispatch(fetchCenters());\r\n    } catch (e) {\r\n      console.log(\"errroooor\");\r\n    }\r\n  }, [dispatch]);\r\n  return (\r\n    <Modal\r\n      title=\"Add new volunteers\"\r\n      visible={isModalVisible}\r\n      onCancel={closeModal}\r\n      footer={null}\r\n    >\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        onFinish={handleSubmit} \r\n      ><Form.Item\r\n      label=\"cin:\"\r\n      name=\"cin\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          type: 'number',\r\n          min: 0,\r\n        },\r\n      ]}\r\n    >\r\n      <InputNumber />\r\n    </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"First Name:\"\r\n          name=\"firstname\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Last Name:\"\r\n          name=\"lastname\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Email:\"\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"birthday:\"\r\n          name=\"birthday\"\r\n          rules={[\r\n            {\r\n              required: true\r\n             // type:'DatePicker'\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"gouvernorat\"\r\n          name=\"governorate\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select onChange={changeGov}>\r\n            <Select.Option>--Choose Governorate--</Select.Option>\r\n            {gouvernorat?.map((gov, key) => {\r\n              return (\r\n                <Select.Option key={key} value={gov}>\r\n                  {gov}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"city\"\r\n          name=\"city\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select >\r\n            <Select.Option>--Choose City--</Select.Option>\r\n            {cities?.map((city, key) => {\r\n              return (\r\n                <Select.Option key={key} value={city}>\r\n                  {city}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"centers\"\r\n          name=\"centers\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          {/* <Select >\r\n            <Select.Option>--Choose Center--</Select.Option>\r\n            {centers?.map((center, key) => {\r\n              return (\r\n                <Select.Option key={center._id} value={center.name}>\r\n                  {center.name}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select> */}\r\n            <AutoComplete\r\n          dataSource={options}\r\n          //onSelect={(e) => onSelect(e)}\r\n          placeholder=\"type center name\"\r\n          filterOption={(inputValue, option) =>\r\n            option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n        />\r\n        </Form.Item>\r\n        \r\n\r\n\r\n        <Button type=\"primary\" htmlType=\"submit\" shape=\"round\"> Add volunteers </Button>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddVolunteers;","import React, { useState,useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"; \r\nimport gouvernorat from \"../../../constants/gouvernorat\";\r\nimport villes from \"../../../constants/villes\";\r\nimport { Modal, Button, Form, Input, InputNumber,Select,DatePicker, AutoComplete} from \"antd\"; \r\nimport * as actions from \"../../../redux/actions/users\";\r\nimport {fetchCenters} from \"../../../redux/actions/centers\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nfunction UpdateVolunteers() {\r\n    \r\n    const isModalVisible = useSelector((state) => state.users.displayUpdate);\r\n  const [cities, setCities] = useState([]);    \r\n  const centers =  useSelector((state) => state.centers.list);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.users.selectedUser);\r\n  console.log('centers', centers)\r\n\r\n   \r\n  const changeGov = (gover) => { \r\n    const found = villes.find((ville) => ville.gov === gover).cities;\r\n    setCities(found ? found : []);\r\n  };\r\n  const closeModal = () => { \r\n    dispatch(actions.setDisplayUpdate(false));\r\n\r\n  };\r\n  const onSelect = (e) => {\r\n    \r\n      console.log('item', e)\r\n    \r\n  };\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(fetchCenters());\r\n    } catch (e) {\r\n      console.log(\"errroooor\");\r\n    }\r\n  }, [dispatch]);\r\n  \r\n   const options = centers.map(opt => (\r\n    <Select.Option key={opt._id} value={opt.name} label={opt.name}>\r\n      {opt.name}\r\n    </Select.Option>\r\n)).concat([\r\n<Select.Option disabled key=\"all\" className=\"show-all\">\r\n Show Plus\r\n</Select.Option>,\r\n]);\r\n    const handleSubmit = async (values) => {\r\n\r\n        console.log('values', values)\r\n        console.log('ahmed',moment().diff(moment('2021-12-15T15:35:45.259Z', 'YYYYMMDD'), 'years'))\r\n\r\n        const Updateduser = {\r\n            id: user._id,\r\n            stock: values.stock,\r\n            ...values\r\n          };\r\n          dispatch(actions.updateUser( {...Updateduser,role:\"volunteer\"}));\r\n          dispatch(actions.setDisplayUpdate(false));\r\n      };\r\n   \r\n  return (\r\n    <Modal\r\n      title=  \"Update volunteers\"\r\n      visible={isModalVisible}\r\n      onCancel={closeModal}\r\n      footer={null}\r\n    >\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        onFinish={handleSubmit} \r\n        initialValues={{\r\n            \"cin\": user?.cin *1,\r\n            \"firstname\": user?.firstname,\r\n            \"lastname\": user?.lastname,\r\n            \"email\": user?.email,\r\n            \"birthday\": moment(user?.birthday),\r\n            \"governorate\": user?.governorate,\r\n            \"city\": user?.city,\r\n\r\n          }}\r\n      ><Form.Item\r\n      label=\"cin:\"\r\n      name=\"cin\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          type: 'number',\r\n          min: 0,\r\n        },\r\n      ]}\r\n    >\r\n      <InputNumber />\r\n    </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"First Name:\"\r\n          name=\"firstname\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Last Name:\"\r\n          name=\"lastname\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Email:\"\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"birthday:\"\r\n          name=\"birthday\"\r\n          rules={[\r\n            {\r\n              required: true\r\n             // type:'DatePicker'\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"gouvernorat\"\r\n          name=\"governorate\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select onChange={changeGov}>\r\n            <Select.Option>--Choose Governorate--</Select.Option>\r\n            {gouvernorat?.map((gov, key) => {\r\n              return (\r\n                <Select.Option key={key} value={gov}>\r\n                  {gov}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"city\"\r\n          name=\"city\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select >\r\n            <Select.Option>--Choose City--</Select.Option>\r\n            {cities.map((city, key) => {\r\n              return (\r\n                <Select.Option key={key} value={city}>\r\n                  {city}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"centers\"\r\n          name=\"centers\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n            <AutoComplete\r\n          dataSource={options}\r\n          onSelect={(e) => onSelect(e)}\r\n          placeholder=\"type center name\"\r\n          filterOption={(inputValue, option) =>\r\n            option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n        />\r\n        </Form.Item>\r\n        \r\n\r\n        \r\n\r\n        <Button type=\"primary\" htmlType=\"submit\" shape=\"round\"> Update volunteers </Button>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default UpdateVolunteers;","import React, { useEffect } from \"react\";\r\nimport { Layout, Button } from \"antd\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport * as actions from \"../../redux/actions/users\";\r\n\r\nimport SideBar from \"../../SideBar/SideBar\";\r\nimport AddVolunteers from \"./AddVolunteers/AddVolunteers\";\r\nimport UpdateVolunteers from \"./UpdateVolunteers/UpdateVolunteer\"\r\nconst { Content } = Layout;\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#DDD\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    padding: \"7px 8px !important\",\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction ManageVolunteers() {\r\n  const isAddVisible = useSelector((state) => state.users.displayed);\r\n  const isUpdateVisible = useSelector((state) => state.users.displayUpdate);\r\n  const users = useSelector((state) => state.users.list[0]);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleUpdate = (user) => {\r\n     dispatch(actions.setSelectedUser(user));\r\n     dispatch(actions.setDisplayUpdate(true));\r\n\r\n  };\r\n  const handleDelete = (id) => {\r\n    dispatch(actions.deleteUser(id));\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(actions.getAllUsers());\r\n    } catch (e) {\r\n      console.log(\"errroooor\");\r\n    }\r\n  }, [dispatch]);\r\n  \r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <SideBar />\r\n      <Layout className=\"site-layout\">\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => dispatch(actions.setDisplayed(true))}\r\n            >\r\n              Add new volunteers\r\n            </Button>\r\n            {isAddVisible && <AddVolunteers />}\r\n            {isUpdateVisible && <UpdateVolunteers />}\r\n\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>First Name</TableCell>\r\n                  <TableCell>Last Name</TableCell>\r\n                  <TableCell>Email</TableCell>\r\n                  <TableCell>Cin</TableCell>\r\n                  <TableCell>Birthday</TableCell>\r\n                  <TableCell>Role</TableCell>\r\n                  <TableCell>Center</TableCell>\r\n                  \r\n                  <TableCell>Update</TableCell>\r\n                  <TableCell>Delete</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              {/* {users.loading && <div>Loading ... </div>} */}\r\n              <TableBody>\r\n                { users && users.length > 0 && \r\n                // !users.loading &&\r\n                //   users.list && \r\n                 \r\n                  users.map((user) => (  \r\n\r\n                               \r\n                       <StyledTableRow key={user?._id}>\r\n                      <StyledTableCell> {user?.firstname}</StyledTableCell>\r\n                      <StyledTableCell> {user?.lastname}</StyledTableCell>\r\n                      <StyledTableCell> {user?.email}</StyledTableCell>\r\n                      <StyledTableCell> {user?.cin}</StyledTableCell>\r\n                      <StyledTableCell> {user?.birthday ? moment(user?.birthday).format(\"DD-MM-YYYY\") : ''}</StyledTableCell>\r\n                      <StyledTableCell> {user?.role}</StyledTableCell>\r\n                      <StyledTableCell>{user?.centers}</StyledTableCell>\r\n                      <StyledTableCell>\r\n                        <Button onClick={() => handleUpdate(user)}>\r\n                          Update{\" \"}\r\n                        </Button>\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                      <IconButton onClick={() => handleDelete(user?._id)}>\r\n                          <DeleteIcon className=\"btnColorDelete\" />\r\n                        </IconButton>\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  ))}\r\n\r\n                  {/* {users && (  \r\nusers.map((user) => (  \r\n   \r\n    value = moment(user.birthday).format(\"DD-MM-YYYY\"),\r\nconsole.log('iness',moment().diff(moment(value, \"DD-MM-YYYY\"), 'years'))\r\n                         \r\n))\r\n\r\n                  )} */}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </Content>\r\n      </Layout>{\" \"}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ManageVolunteers;","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as types from \"../redux/types\";\r\nimport * as actions from \"../redux/actions/users\";\r\nimport { Form, Input, Button, Select, InputNumber, notification } from \"antd\";\r\n\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\nimport \"../InscriptionInCenter/InscriptionInCenter.css\";\r\nimport gouvernorat from \"../constants/gouvernorat\";\r\nimport villes from \"../constants/villes\";\r\n\r\nfunction InscriptionInCenter() {\r\n  const dispatch = useDispatch();\r\n  const [cities, setCities] = useState([]);\r\n  const changeGov = (gover) => {\r\n    const found = villes.find((ville) => ville.gov === gover).cities;\r\n    setCities(found ? found : []);\r\n  };\r\n  const error = useSelector((state) => state.errorReducer);\r\n  const [err, setError] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  useEffect(() => {\r\n    if (error.message) {\r\n      setError(error.message);\r\n      setCode(error.code);\r\n    }\r\n  }, [error]);\r\n  const handleSubmit = async (values) => {\r\n    const user = {\r\n      cin: values.cin,\r\n      firstname: values.firstname,\r\n      lastname: values.lastname,\r\n      email: values.email,\r\n      birthday: values.birthday,\r\n      governorate: values.governorate,\r\n      city: values.city,\r\n    };\r\n    dispatch(actions.registerCenter(user));\r\n  };\r\n  const clearError = () => {\r\n    dispatch({\r\n      type: types.CLEAR_ERRORS,\r\n    });\r\n    setError(\"\");\r\n    setCode(\"\");\r\n  };\r\n  const popUp = (type) => {\r\n    notification[type]({\r\n      message: code,\r\n      description: err,\r\n      onClose: clearError,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {err && popUp(\"error\")}\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 4 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        className=\"inscriC\"\r\n        onFinish={handleSubmit}\r\n      >\r\n        <p className=\"parag\">Veuillez remplir ces champs en langue française</p>\r\n        <Form.Item\r\n          name=\"cin\"\r\n          label=\"CIN:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"firstname\"\r\n          name=\"firstname\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Prénom:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n          name=\"lastname\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Email:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n          name=\"email\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Gouvernorat\"\r\n          name=\"governorate\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select onChange={changeGov}>\r\n            <Select.Option>--Choisir votre Gouvernorat--</Select.Option>\r\n            {gouvernorat?.map((gov, key) => {\r\n              return (\r\n                <Select.Option key={key} value={gov}>\r\n                  {gov}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Ville\"\r\n          name=\"city\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select>\r\n            <Select.Option>--Choisir votre ville--</Select.Option>\r\n            {cities?.map((city, key) => {\r\n              return (\r\n                <Select.Option key={key} value={city}>\r\n                  {city}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Age\"\r\n          name=\"birthday\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Button type=\"primary\" block htmlType=\"submit\" shape=\"round\">\r\n          S'inscrire\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InscriptionInCenter;\r\n","import Axios from \"axios\";\r\n\r\nlet baseUrl = \"http://localhost:5000/api/auth\";\r\n\r\nexport const register = async (user) => {\r\n  try {\r\n    const result = await Axios.post(baseUrl + \"/register\", user);\r\n    localStorage.setItem(\"token\", result.data.token);\r\n    return result.data.user;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const registerpharmacy = async (user) => {\r\n  try {\r\n    const result = await Axios.post(baseUrl + \"/registerpharmacy\", user);\r\n    localStorage.setItem(\"token\", result.data.token);\r\n    return result.data.user;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const login = async (user) => {\r\n  try {\r\n    const result = await Axios.post(baseUrl + \"/login\", user);\r\n    localStorage.setItem(\"token\", JSON.stringify(result.data.token));\r\n    // localStorage.setItem(\"token\", result.data.token);\r\n    return result.data.token;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n","import * as types from \"../../types\";\r\nimport * as api from \"../../../services/auth.service\";\r\n\r\nexport const login = (user) => async (dispatch) => {\r\n  dispatch({\r\n    type: types.FETCH_USER_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const loggedUser = await api.login(user);\r\n    dispatch({\r\n      type: types.LOGIN_SUCCESS,\r\n      payload: loggedUser,\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: types.LOGIN_FAIL,\r\n      payload: {},\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../redux/actions/auth\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport { Form, Input, Button } from \"antd\";\r\n//import { useHistory } from \"react-router\";\r\nimport \"./CitoyenSpace.css\";\r\nimport { connect } from \"react-redux\";\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n};\r\n// const mapStateToProps = (state) => {\r\n//   console.log(state);\r\n//   return {\r\n//     user: state,\r\n//   };\r\n// };\r\n\r\nfunction CitoyenSpace(props) {\r\n  const dispatch = useDispatch();\r\n  // const [cin, setCin] = useState(\"\");\r\n  // const [code, setCode] = useState(\"\");\r\n\r\n  const handleSubmit = async (values) => {\r\n    const user = {\r\n      cin: values.cin,\r\n      code: values.pass,\r\n    };\r\n    dispatch(actions.login(user));\r\n\r\n    console.log(props);\r\n    // props.history.push(\"/Profile\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <Form\r\n        name=\"control-ref\"\r\n        labelCol={{ span: 4 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"horizontal\"\r\n        className=\"update\"\r\n        onFinish={handleSubmit}\r\n      >\r\n        <p className=\"para\">Veuillez vous connecter à votre espace citoyen</p>\r\n        <Form.Item\r\n          name=\"cin\"\r\n          label=\"CIN:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input type=\"cin\"// onChange={(e) => setCin(e.target.value)} \r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"code\"\r\n          label=\"Num Inscription:\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input type=\"code\" //onChange={(e) => setCode(e.target.value)} \r\n          />\r\n        </Form.Item>\r\n        <Button type=\"primary\" className=\"bt\" htmlType=\"submit\" shape=\"round\">\r\n          Se connecter\r\n        </Button>\r\n      </Form>\r\n      {/* {!loggedUser} */}\r\n    </div>\r\n  );\r\n}\r\n// export default connect(mapStateToProps, { loggedUser })(CitoyenSpace);\r\nexport default connect(mapStateToProps, {})(CitoyenSpace);\r\n","import React from \"react\";\r\n\r\nfunction Profile() {\r\n  return (\r\n    <div>\r\n      <p>working</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Router, Switch, Route  } from \"react-router-dom\";\r\n\r\nimport { createBrowserHistory } from \"history\";\r\nimport Home from \"./Home/Home\";\r\nimport Admin from \"./Admin/Admin\";\r\nimport ManageCenter from \"./Admin/ManageCenter/ManageCenter\";\r\nimport ManageOpenDay from \"./Admin/ManageOpenDay/ManageOpenDay\";\r\nimport ManagePharmacy from \"./Admin/ManagePharmacy/ManagePharmacy\";\r\nimport inscriptionPharmacie from \"./inscriptionPharmacie/inscriptionPharmacie\";\r\nimport UpdateInscri from \"./updateInscri/updateInscri\";\r\nimport reportRdv from \"./reportRdv/reportRdv\";\r\n//import Login from \"./login\";\r\nimport ManageVaccine from \"./Admin/ManageVaccine/ManageVaccine\";\r\nimport ManageVolunteers from \"./Admin/ManageVolunteers/ManageVolunteers\";\r\nimport InscriptionInCenter from \"./InscriptionInCenter/InscriptionInCenter\";\r\nimport Chatbot from \"./Chatbot\";\r\nimport CitoyenSpace from \"./CitoyenSpace/CitoyenSpace\";\r\nimport Profile from \"./Profile/Profile\";\r\n\r\n\r\n\r\n\r\nexport let history = createBrowserHistory({ basename: \"\" });\r\nclass AppRouter extends React.Component {\r\n  render() {\r\n    return (\r\n      // Set the directory path if you are deploying in sub-folder\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path=\"/Home\" component={Home}></Route>\r\n\r\n          <Route path=\"/ManageCenter\" component={ManageCenter}></Route>\r\n          <Route path=\"/ManagePharmacy\" component={ManagePharmacy}></Route>\r\n          <Route path=\"/ManageOpenDay\" component={ManageOpenDay}></Route>\r\n          <Route\r\n            path=\"/inscriptionInCenter\"\r\n            component={InscriptionInCenter}\r\n          ></Route>\r\n          <Route path=\"/ManageVaccines\" component={ManageVaccine}></Route>\r\n          <Route path=\"/ManageVolunteers\" component={ManageVolunteers}></Route>\r\n\r\n          <Route\r\n            path=\"/inscriptionPharmacie\"\r\n            component={inscriptionPharmacie}\r\n          ></Route>\r\n          <Route path=\"/updateInscription\" component={UpdateInscri}></Route>\r\n          <Route path=\"/citoyenSpace\" component={CitoyenSpace}></Route>\r\n\r\n          <Route path=\"/reportRdv\" component={reportRdv}></Route>\r\n\r\n          <Route path=\"/Admin\" component={Admin}></Route>\r\n          <Route path=\"/Chatbot\" component={Chatbot}></Route>\r\n          <Route path=\"/Profile\" component={Profile}></Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","import \"antd/dist/antd.css\";\r\nimport \"./App.css\";\r\nimport \"./i18n\";\r\nimport React from 'react'\r\n\r\nimport AppRouter from \"./Router\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      \r\n      <AppRouter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as types from \"../types\";\r\n\r\nconst initialState = {\r\n  selectedCenter: {},\r\n  loading: false,\r\n  displayed: false,\r\n  displayUpdate: false,\r\n  errors: false,\r\n  list: [],\r\n};\r\n\r\nconst centers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_SELECTED_CENTER:\r\n      return {\r\n        ...state,\r\n        selectedCenter: action.center || {},\r\n      };\r\n    case types.SET_DISPLAYED:\r\n      return {\r\n        ...state,\r\n        displayed: action.value,\r\n      };\r\n    case types.SET_DISPLAY_UPDATE:\r\n      return {\r\n        ...state,\r\n        displayUpdate: action.value,\r\n      };\r\n    case types.SET_DISPLAY_UPDATE_VAC:\r\n      return {\r\n        ...state,\r\n        displayUpdateVac: action.value,\r\n      };\r\n\r\n    case types.FETCH_CENTERS_REQUEST:\r\n      return { ...state, loading: true, errors: true };\r\n    case types.FETCH_CENTERS_SUCCESS:\r\n      return { ...state, list: [...action.list], loading: false, errors: true };\r\n    case types.FETCH_CENTERS_FAILURE:\r\n      return { ...state, errors: true, loading: false };\r\n    case types.FETCH_CENTER_BY_ID:\r\n      return {\r\n        ...state,\r\n        selectedCenter: action.center,\r\n      };\r\n\r\n    case types.ADD_CENTER:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.center], // or list: state.list.concat(action.center)\r\n      };\r\n\r\n    case types.UPDATE_CENTER:\r\n      const updatedCenters = state.list.map((center) => {\r\n        if (center.id === action.center._id) {\r\n          return action.center;\r\n        }\r\n        return center;\r\n      });\r\n      return { ...state, list: updatedCenters };\r\n\r\n    case types.DELETE_CENTER:\r\n      const newCenters = state.list.filter(\r\n        (center) => center.name !== action.center\r\n      );\r\n      console.log(newCenters);\r\n      return { ...state, list: newCenters };\r\n\r\n    case types.ADD_VACCINE_TO_CENTER:\r\n      const updatedCenterVaccine = state.list.map((center) => {\r\n        if (center._id === action.center._id) { \r\n          return  {...action.center};\r\n        }\r\n        return center;\r\n      });\r\n      console.log(updatedCenterVaccine);\r\n      return { ...state, list: updatedCenterVaccine };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default centers;\r\n","import * as types from \"../types\";\r\n\r\nconst loggedUser = JSON.parse(localStorage.getItem(\"token\"));\r\n\r\nconst initialState = loggedUser\r\n  ? { isLoggedIn: true, loggedUser }\r\n  : { isLoggedIn: false, loggedUser: null };\r\n\r\nconst auth = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case types.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        loggedUser: payload.loggedUser,\r\n      };\r\n    case types.LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        loggedUser: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default auth;\r\n","import * as types from \"../types\"\r\n\r\nconst initialState = {\r\n  selectedPharmacy: {},\r\n  loading: false,\r\n  displayed:false,\r\n  displayUpdate:false,\r\n  errors: false,\r\n  list: [],\r\n}\r\n\r\nconst pharmacies = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_SELECTED_PHARMACY:\r\n      return {\r\n        ...state,\r\n        selectedPharmacy: action.pharmacy || {},\r\n      }\r\n    case types.SET_DISPLAYED_PHARMACY:\r\n      return {\r\n        ...state,\r\n        displayed: action.value,\r\n      } \r\n    case types.SET_DISPLAY_UPDATE: \r\n      return {\r\n        ...state,\r\n        displayUpdate: action.value,\r\n      }  \r\n    case types.FETCH_PHARMACIES_REQUEST:\r\n      return { ...state, loading: true, errors: true }\r\n    case types.FETCH_PHARMACIES_SUCCESS: \r\n       return { ...state, list: [...action.list], loading: false, errors:true }\r\n    case types.FETCH_PHARMACIES_FAILURE:\r\n      return { ...state, errors: true, loading: false }\r\n    case types.FETCH_PHARMACY_BY_ID:\r\n      return {\r\n        ...state,\r\n        selectedPharmacy: action.pharmacy,\r\n      }\r\n\r\n    case types.ADD_PHARMACY: \r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.pharmacy], // or list: state.list.concat(action.pharmacy)\r\n      }\r\n\r\n    case types.UPDATE_PHARMACY:\r\n      const updatedPharmacies = state.list.map((pharmacy) => {\r\n        if (pharmacy.id === action.pharmacy._id) {\r\n          return action.pharmacy\r\n        }\r\n        return pharmacy\r\n      })\r\n      return { ...state, list: updatedPharmacies }\r\n\r\n    case types.DELETE_PHARMACY:\r\n      const newPharmacies = state.list.filter((pharmacy) => pharmacy.name !== action.pharmacy)\r\n      console.log(newPharmacies)\r\n      return { ...state, list: newPharmacies }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default pharmacies\r\n","import * as types from \"../types\";\r\n\r\nconst initialState = {\r\n  selectedVaccine: {},\r\n  loading: false,\r\n  displayed: false,\r\n  displayUpdate: false,\r\n  errors: false,\r\n  list: [],\r\n};\r\n\r\nconst vaccines = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_SELECTED_VACCINE:\r\n      return {\r\n        ...state,\r\n        selectedVaccine: action.vaccine || {},\r\n      };\r\n\r\n    case types.FETCH_VACCINES_REQUEST:\r\n      return { ...state, loading: true, errors: true };\r\n    case types.FETCH_VACCINES_SUCCESS:\r\n      return { ...state, list: [...action.list], loading: false, errors: true };\r\n    case types.FETCH_VACCINES_FAILURE:\r\n      return { ...state, errors: true, loading: false };\r\n    case types.FETCH_VACCINE_BY_ID:\r\n      return {\r\n        ...state,\r\n        selectedVaccine: action.vaccine,\r\n      };\r\n\r\n    case types.ADD_VACCINE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.vaccine], // or list: state.list.concat(action.center)\r\n      };\r\n\r\n    case types.SET_DISPLAYED_VACCINE:\r\n      return {\r\n        ...state,\r\n        displayed: action.value,\r\n      };\r\n    case types.SET_DISPLAY_UPDATE_VACCINE:\r\n      return {\r\n        ...state,\r\n        displayUpdate: action.value,\r\n      };\r\n\r\n    case types.UPDATE_VACCINE:\r\n      const updatedVACCINES = state.list.map((vaccine) => {\r\n        if (vaccine.id === action.vaccine._id) {\r\n          return action.vaccine;\r\n        }\r\n        return vaccine;\r\n      });\r\n      return { ...state, list: updatedVACCINES };\r\n\r\n    case types.DELETE_VACCINE:\r\n      const newVaccines = state.list.filter(\r\n        (vaccine) => vaccine.vaccine_type !== action.vaccine\r\n      );\r\n      console.log(newVaccines);\r\n      return { ...state, list: newVaccines };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default vaccines;\r\n","import * as types from \"../types\";\r\n\r\nconst initialState = {\r\n  selectedUser: {},\r\n  loading: false,\r\n  displayed: false,\r\n  displayUpdate: false,\r\n  errors: false,\r\n  list: [],\r\n};\r\n\r\nconst users = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_DISPLAYED_USER:\r\n      return {\r\n        ...state,\r\n        displayed: action.value,\r\n      };\r\n    case types.SET_DISPLAY_UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        displayUpdate: action.value,\r\n      };\r\n    case types.REGISTER_CENTER:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.user],\r\n      };\r\n    case types.SET_SELECTED_USER:\r\n      return {\r\n        ...state,\r\n        selectedUser: action.user || {},\r\n      };\r\n    case types.ADD_USER:\r\n      return {\r\n        ...state,\r\n        list: [state.list[0].concat(action.user)],\r\n      };\r\n    // update del (ines ..)\r\n\r\n    case types.UPDATE_USER:\r\n      const updatedUsers = state.list[0].map((user) => {\r\n        if (user._id === action.user._id) {\r\n          return action.user;\r\n        }\r\n        return user;\r\n      });\r\n      return { ...state.list, list: [updatedUsers] };\r\n\r\n    case types.DELETE_USER:\r\n      const newList = state.list[0].filter((user) => user._id !== action.user);\r\n\r\n      return { ...state.list, list: [newList] };\r\n\r\n    case types.GET_ALL_USER:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.user],\r\n      };\r\n\r\n    case types.GET_USER_BY_CIN:\r\n      return {\r\n        ...state,\r\n        selectedUser: action.user,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default users;\r\n","import * as types from \"../types\";\r\n\r\nconst initialState = {\r\n  currentRDV : null,\r\n  updatedRDV : null\r\n};\r\n\r\nconst updateRDV = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.UPDATE_RDV:\r\n      return {\r\n        ...state,\r\n        updatedRDV: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default updateRDV;","import { SET_ERRORS,CLEAR_ERRORS } from '../types';\r\n\r\nconst initialState = {\r\n    message :\"\",\r\n    code:\"\"\r\n};\r\n\r\nconst setErrors = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ERRORS: \r\n            return {...state,message: action.payload.message,code:action.payload.code};\r\n        case CLEAR_ERRORS: \r\n            return {...state,message: \"\",code:\"\"};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default setErrors\r\n\r\n\r\n","import * as types from \"../types\";\r\n\r\nconst initialState = {\r\n  selectedOpenDay: {},\r\n  loading: false,\r\n  displayed: false,\r\n  displayUpdate: false,\r\n  errors: false,\r\n  list: [],\r\n};\r\n\r\nconst openDays = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_DISPLAYED_OPEN_DAY:\r\n      return {\r\n        ...state,\r\n        displayed: action.value,\r\n      }; \r\n    case types.SET_DISPLAY_UPDATE_OPEN_DAY:\r\n      return {\r\n        ...state,\r\n        displayUpdate: action.value,\r\n      };\r\n\r\n    case types.GET_ALL_OPEN_DAYS:\r\n      return { ...state, list: [...action.OpenDays], loading: false, errors: false };\r\n\r\n    case types.ADD_OPEN_DAY:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.openDay], // or list: state.list.concat(action.center)\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default openDays;\r\n","import { combineReducers } from \"redux\";\r\nimport centers from \"./centers\";\r\nimport auth from \"./auth\";\r\nimport pharmacies from \"./pharmacies\";\r\nimport vaccines from \"./vaccines\";\r\nimport users from \"./users\";\r\nimport updateRDV from \"./Rdv\"; \r\nimport errorReducer from './errorReducer'\r\nimport openDays from \"./openDay\"\r\n\r\nconst rootReducer = () => {\r\n  return combineReducers({\r\n    centers,\r\n    pharmacies,\r\n    vaccines,\r\n    auth,\r\n    users,\r\n    updateRDV,\r\n    errorReducer,\r\n    openDays\r\n\r\n    \r\n  });\r\n};\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"./i18n\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport {configureStore} from './redux/store';\r\nconst store = configureStore()\r\nReactDOM.render(\r\n  <Provider store = {store} >\r\n    <App />\r\n  </Provider>, \r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { applyMiddleware, compose } from \"redux\" \r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducers\"\r\nimport { createStore } from \"redux\"\r\n \r\nexport const configureStore = () => {\r\n  const middlewares = [thunk]\r\n  const composeEnhancers =\r\n    process.env.NODE_ENV !== \"production\"\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n      : compose\r\n  return createStore(\r\n    rootReducer(),\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n  )\r\n}"],"sourceRoot":""}